{"version":3,"sources":["./src/app/views/offers/offers-detail/offers-detail-smart.component.ts","./src/app/views/offers/offers-detail/offers-detail.component.ts","./src/app/views/offers/offers-detail/offers-detail.component.html","./src/app/views/offers/offers-list/offers-list.component.ts","./src/app/views/offers/offers-list/offers-list.component.html","./src/app/views/offers/offers-profile/offers-profile.component.ts","./src/app/views/offers/offers-profile/offers-profile.component.html","./src/app/views/offers/offers-routing.module.ts","./src/app/views/offers/offers.component.ts","./src/app/views/offers/offers.component.html","./src/app/views/offers/offers.module.ts"],"names":[],"mappings":"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","file":"views-offers-offers-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store} from '@ngrx/store';\nimport { AppStore } from 'src/app/shared/models/store.interface';\nimport * as UserSelector from '../../../shared/state/user/selectors/user.selector';\nimport * as OfferSelector from '../../../shared/state/offers/selectors/offers.selector';\n@Component({\n  selector: 'app-profile-account-smart',\n  template: `<app-offers-detail\n    [user]=\"users$|async\" [offers]=\"offers$|async\"></app-offers-detail>`,\n  \n})\nexport class OffersDetailSmartComponent implements OnInit {\n  public users$: Observable<any> = this.store$.select(UserSelector.selectAll);\n  public offers$: Observable <any> = this.store$.select(OfferSelector.selectOffer); \n  \n  constructor(private store$: Store<AppStore>) { }\n  \n  ngOnInit() {\n  \n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/shared/models/user.model';\nimport { Store } from '@ngrx/store';\nimport * as UserActions from '../../../shared/state/user/actions/user.actions';\n\n@Component({\n  selector: 'app-offers-detail',\n  templateUrl: './offers-detail.component.html',\n  styleUrls: ['./offers-detail.component.scss']\n})\nexport class OffersDetailComponent implements OnInit {\n  @Input() user: User;\n  @Input() offers: Offer[]=[];\n  offer: Offer;\n  \n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private store$:Store\n  ) {}\n\n  subscribeOffer() {\n    const offers = [...this.user.offers,this.offer];\n    const user = {...this.user,offers};\n    this.store$.dispatch(new UserActions.Update(user));\n    this.router.navigate(['/admin/profile']);\n  }\n  unsubscribeOffer(index) {\n    const offers = [...this.user.offers];\n    const id = offers.findIndex(offer=> offer.id=== index)\n    offers.splice(id,1);\n    const user = {...this.user,offers};\n    this.store$.dispatch(new UserActions.Update(user));\n    this.router.navigate(['/admin/profile']);\n  }\n  isSubscribe(): boolean {\n    return !!this.user.offers.find(_offer => this.offer.id === _offer.id);\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const offers = this.offers;\n\n      const offerID = +params.id;\n      this.offer = (offers.find(offer => offer.id === offerID) || {}) as Offer;\n    });\n  }\n}\n","<div *ngIf=\"user\">\n  <div *ngIf=\"offers\">\n    \n    <section style=\"clear:both;padding-bottom:2em;\"></section>\n    <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\n      <mat-card>\n       \n      <mat-card-header >\n        <mat-card-title class=\"title_card\">Offers Detail</mat-card-title>\n      </mat-card-header>\n\n        <mat-card-content>\n          <mat-list>\n            <mat-list-item><span class=\"negrita\">Empresa:</span> {{offer.company.name}}</mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item><span class=\"negrita\">Oferta:</span> {{offer.job.name}}</mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item><span class=\"negrita\">Descripción:</span> {{offer.job.description}}</mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item><span class=\"negrita\">Provincia:</span> {{offer.province.name}}</mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item><span class=\"negrita\">Municipio:</span> {{offer.municipe.name}}</mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item><span class=\"negrita\">Fecha:</span> {{offer.date|date:'d/M/yyyy'}}</mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item><span class=\"negrita\">Categoría:   </span> {{offer.category.name}}</mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item><span class=\"negrita\">Título: </span><div *ngFor=\"let item of offer.title\" class=\"separacion\">   {{item.name}}</div></mat-list-item>\n            <mat-divider></mat-divider>\n          </mat-list>\n          <section style=\"clear:both;padding-bottom:1em;\"></section>\n         \n          <div class=\"cont\">\n          <button mat-raised-button color=\"primary\" class=\"buttonseparacion\" *ngIf=\"!isSubscribe()\" (click)=\"subscribeOffer()\"><mat-icon>check_circle</mat-icon>Inscribirse</button>\n          <button mat-raised-button color=\"warn\" class=\"buttonseparacion\" *ngIf=\"isSubscribe()\" (click)=\"unsubscribeOffer(offer.id)\"><mat-icon>delete</mat-icon>Eliminar oferta</button>\n        </div>\n        </mat-card-content>\n        </mat-card>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-list',\n  templateUrl: './offers-list.component.html',\n  styleUrls: ['./offers-list.component.scss'],\n})\nexport class OffersListComponent implements OnInit {\n  @Input() user:User;\n  @Input() offers: Offer[]=[];\n  offersStudy: Offer[] = [];\n  offersOther: Offer[] = [];\n  displayedColumnsOffersOk: string[] = ['puesto','empresa','familia','fecha','provincia','municipio','inscrito','action'];\n  displayedColumnsOffersKo: string[] = ['puesto','empresa','familia','fecha','provincia','municipio'];\n  constructor() { }\n\n  private selectOffers() {\n    const studiesOfUser = this.user.studies;\n    const offersOfUser = this.user.offers; \n\n    this.offersStudy = this.offers //Retorna las ofertas que hay en el store y comparadas con los studio del usuario\n      .filter(offer =>\n        studiesOfUser.some(study => study.category.uid === offer.category.uid)\n      )\n      .map(offer => {\n        const offerUser = !!offersOfUser.find(\n          _offerUser => _offerUser.id === offer.id\n        );\n        return { ...offer, subscribe: offerUser };\n      });\n\n    this.offersOther = this.offers.filter(offer =>\n      studiesOfUser.every(study => study.uid !== offer.category.uid)\n    );\n  }\n\n  ngOnInit() {\n    this.selectOffers();\n  }\n}\n","<div *ngIf=\"user\">\n  <div *ngIf=\"offers\">\n    <section style=\"clear:both;padding-bottom:2em;\"></section>\n    <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\n      <mat-card>\n       \n      <mat-card-header >\n        <mat-card-title class=\"title_card\">Cumple con la Titulación (Familia)</mat-card-title>\n      </mat-card-header>\n\n          <mat-card-content>\n\n            <table mat-table [dataSource]=\"offersStudy\" class=\"mat-elevation-z8\">\n\n              <ng-container matColumnDef=\"puesto\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Puesto </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.job.name}} </td>\n              </ng-container>    \n\n              <ng-container matColumnDef=\"empresa\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Empresa </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.company.name}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"familia\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Familia </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.category.name}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"fecha\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Fecha </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.date |date:'d/M/yyyy'}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"provincia\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Provincia </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.province.name}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"municipio\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Municipio </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.municipe.name}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"inscrito\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Inscrito </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.subscribe ? 'Sí' : 'No'}} </td>\n              </ng-container> \n\n              <ng-container matColumnDef=\"action\">\n                <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Acciones </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> \n                  <button mat-mini-fab color=\"accent\" class=\"buttonseparacion\"><a [routerLink]=\"[element.id]\"><mat-icon>details</mat-icon></a></button>\n                </td>\n              </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsOffersOk\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsOffersOk;\"></tr>\n          </table>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n          </mat-card-content>\n      </mat-card>\n</div>\n\n  \n<!--\n  <table class=\"table table-bordered table-striped\">\n  <thead class=\"thead-light\">\n    <tr>\n      <th>Puesto</th>\n      <th>Empresa</th>\n      <th>Familia</th>\n      <th>Fecha</th>\n      <th>Provincia</th>\n      <th>Municipio</th>\n      <th>Inscrito</th>\n      <th>Acciones</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let offer of offersStudy\">\n      <td>{{ offer.job.name }}</td>\n      <td>{{ offer.company.name }}</td>\n      <td>{{ offer.category.name }}</td>\n      <td>{{ offer.date }}</td>\n      <td>{{ offer.province.name }}</td>\n      <td>{{ offer.municipe.name }}</td>\n      <td>{{ offer.subscribe ? 'Sí' : 'No' }}</td>\n      <td>\n        <a style=\"cursor:pointer\" [routerLink]=\"[offer.id]\">Ver Detalle</a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n-->\n\n<section style=\"clear:both;padding-bottom:2em;\"></section>\n\n<div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\n  <mat-card>\n  <mat-card-header >\n    <mat-card-title class=\"title_card\">Otras Ofertas</mat-card-title>\n  </mat-card-header>\n\n      <mat-card-content>\n\n        <table mat-table [dataSource]=\"offersOther\" class=\"mat-elevation-z8\">\n\n          <ng-container matColumnDef=\"puesto\" >\n            <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Puesto </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.job.name}} </td>\n          </ng-container>    \n\n          <ng-container matColumnDef=\"empresa\" >\n            <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Empresa </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.company.name}} </td>\n          </ng-container>  \n\n          <ng-container matColumnDef=\"familia\" >\n            <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Familia </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.category.name}} </td>\n          </ng-container>  \n\n          <ng-container matColumnDef=\"fecha\" >\n            <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Fecha </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.date |date:'d/M/yyyy'}} </td>\n          </ng-container>  \n\n          <ng-container matColumnDef=\"provincia\" >\n            <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Provincia </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.province.name}} </td>\n          </ng-container>  \n\n          <ng-container matColumnDef=\"municipio\" >\n            <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Municipio </th>\n            <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.municipe.name}} </td>\n          </ng-container>  \n\n          \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumnsOffersKo\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumnsOffersKo;\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n        </mat-card-content>\n    </mat-card>\n</div>      \n<!--SIN MATERIAL\n\n<h3>Otras Ofertas</h3>\n\n<table class=\"table table-bordered table-striped\">\n  <thead class=\"thead-light\">\n    <tr>\n      <th>Puesto</th>\n      <th>Empresa</th>\n      <th>Familia</th>\n      <th>Fecha</th>\n      <th>Provincia</th>\n      <th>Municipio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let offer of offersOther\">\n      <td>{{ offer.job.name }}</td>\n      <td>{{ offer.company.name }}</td>\n      <td>{{ offer.category.name }}</td>\n      <td>{{ offer.date }}</td>\n      <td>{{ offer.province.name }}</td>\n      <td>{{ offer.municipe.name }}</td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n</div>\n</div>-->","import { Component, OnInit, Input } from '@angular/core';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-profile',\n  templateUrl: './offers-profile.component.html',\n  styleUrls: ['./offers-profile.component.scss']\n})\nexport class OffersProfileComponent implements OnInit {\n  @Input() user:User;\n  displayedColumnsOffers: string[] = ['puesto','empresa','familia','fecha','provincia','municipio','action'];\n\n  offers: Offer[] = [];\n  constructor() { }\n\n  ngOnInit() {\n    this.offers = this.user.offers;\n  }\n}\n","<div *ngIf=\"user\">\n\n  <section style=\"clear:both;padding-bottom:2em;\"></section>\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\n    <mat-card>\n     \n    <mat-card-header >\n      <mat-card-title class=\"title_card\">Mis Ofertas</mat-card-title>\n    </mat-card-header>\n\n        <mat-card-content>\n\n          <table mat-table [dataSource]=\"offers\" class=\"mat-elevation-z8\">\n\n            <ng-container matColumnDef=\"puesto\" >\n              <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Puesto </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.job.name}} </td>\n            </ng-container>  \n\n            <ng-container matColumnDef=\"empresa\" >\n              <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Empresa </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.company.name}} </td>\n            </ng-container>  \n\n            <ng-container matColumnDef=\"familia\" >\n              <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Familia </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.category.name}} </td>\n            </ng-container>  \n\n            <ng-container matColumnDef=\"fecha\" >\n              <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Fecha </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.date |date:'d/M/yyyy'}} </td>\n            </ng-container>  \n\n            <ng-container matColumnDef=\"provincia\" >\n              <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Provincia </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.province.name}} </td>\n            </ng-container>  \n\n            <ng-container matColumnDef=\"municipio\" >\n              <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Municipio </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.municipe.name}} </td>\n            </ng-container>  \n\n            <ng-container matColumnDef=\"action\">\n              <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Acciones </th>\n              <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> \n                <button mat-mini-fab color=\"accent\" class=\"buttonseparacion\"><a [routerLink]=\"['/admin/offers/', element.id]\"><mat-icon>details</mat-icon></a></button>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsOffers\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsOffers;\"></tr>\n          </table>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n          </mat-card-content>\n      </mat-card>\n</div>\n\n<!-- SIN MATERIAL\n\n  <h3>Mis Ofertas</h3>\n\n<table class=\"table table-bordered table-striped\">\n  <thead class=\"thead-light\">\n    <tr>\n      <th>Puesto</th>\n      <th>Empresa</th>\n      <th>Familia</th>\n      <th>Fecha</th>\n      <th>Provincia</th>\n      <th>Municipio</th>\n      <th>Acciones</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let offer of offers\">\n      <td>{{ offer.job.name }}</td>\n      <td>{{ offer.company.name }}</td>\n      <td>{{ offer.category.name }}</td>\n      <td>{{ offer.date }}</td>\n      <td>{{ offer.province.name }}</td>\n      <td>{{ offer.municipe.name }}</td>\n      <td>\n        <a style=\"cursor:pointer\" [routerLink]=\"['/admin/offers/', offer.id]\"\n          >Ver Detalle</a\n        >\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n-->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OffersComponent } from './offers.component';\nimport { OffersDetailComponent } from './offers-detail/offers-detail.component';\nimport { OffersDetailSmartComponent } from './offers-detail/offers-detail-smart.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OffersComponent\n  },\n  {\n    path: 'my-offers',\n    component: OffersComponent,\n    data: { my_offers: true }\n  },\n  {\n    path: ':id',\n    component: OffersDetailSmartComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OffersRoutingModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Store } from  '@ngrx/store';\nimport { AppStore } from 'src/app/shared/models/store.interface';\nimport * as UserSelector from '../../shared/state/user/selectors/user.selector';\nimport * as OfferSelector from '../../shared/state/offers/selectors/offers.selector';\n\n@Component({\n  selector: 'app-offers',\n  templateUrl: './offers.component.html',\n  styleUrls: ['./offers.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OffersComponent implements OnInit {\n  public users$ : Observable <any> = this.store$.select(UserSelector.selectAll);\n  public offers$: Observable <any> = this.store$.select(OfferSelector.selectOffer);  \n\n  isOffersList = true;\n  constructor(private route: ActivatedRoute, private store$: Store<AppStore>) {\n    this.route.data.subscribe(\n      params => (this.isOffersList = !params.my_offers)\n    );\n  }\n\n  ngOnInit() {\n    \n  }\n}\n","<!--<h2>\n  Offers\n</h2>-->\n\n<app-offers-list *ngIf=\"isOffersList\" [user]=\"users$|async\" [offers]=\"offers$|async\"></app-offers-list>\n<app-offers-profile *ngIf=\"!isOffersList\" [user]=\"users$|async\"></app-offers-profile>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OffersRoutingModule } from './offers-routing.module';\nimport { OffersComponent } from './offers.component';\nimport { OffersDetailComponent } from './offers-detail/offers-detail.component';\nimport { OffersDetailSmartComponent} from '../offers/offers-detail/offers-detail-smart.component';\nimport { OffersListComponent } from './offers-list/offers-list.component';\nimport { OffersProfileComponent } from './offers-profile/offers-profile.component';\nimport { MaterialModule } from '../../material-module'\n\n@NgModule({\n  declarations: [\n    OffersComponent,\n    OffersProfileComponent,\n    OffersListComponent,\n    OffersDetailComponent,\n    OffersDetailSmartComponent\n  ],\n  imports: [CommonModule, OffersRoutingModule,MaterialModule ]\n})\nexport class OffersModule {}\n"],"sourceRoot":"webpack:///"}