{"version":3,"sources":["./src/app/shared/directives/date-validator.directive.ts","./src/app/shared/directives/document-number-validator.directive.ts","./src/app/views/profile/profile-routing.module.ts","./src/app/views/profile/profile-student/account/profile-account-smart.component.ts","./src/app/views/profile/profile-student/account/profile-account.component.ts","./src/app/views/profile/profile-student/account/profile-account.component.html","./src/app/views/profile/profile-student/language/profile-language-smart.component.ts","./src/app/views/profile/profile-student/language/profile-language.component.ts","./src/app/views/profile/profile-student/language/profile-language.component.html","./src/app/views/profile/profile-student/profile-student.component.ts","./src/app/views/profile/profile-student/profile-student.component.html","./src/app/views/profile/profile-student/study/profile-study-smart.component.ts","./src/app/views/profile/profile-student/study/profile-study.component.ts","./src/app/views/profile/profile-student/study/profile-study.component.html","./src/app/views/profile/profile-student/study/university-degree-form/university-degree-form.component.ts","./src/app/views/profile/profile-student/study/university-degree-form/university-degree-form.component.html","./src/app/views/profile/profile-student/study/vocational-form/vocational-form.component.ts","./src/app/views/profile/profile-student/study/vocational-form/vocational-form.component.html","./src/app/views/profile/profile-student/work-experience/work-experiencie-smart.component.ts","./src/app/views/profile/profile-student/work-experience/work-experiencie.component.ts","./src/app/views/profile/profile-student/work-experience/work-experiencie.component.html","./src/app/views/profile/profile.component.ts","./src/app/views/profile/profile.component.html","./src/app/views/profile/profile.module.ts"],"names":[],"mappings":"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","file":"views-profile-profile-module.js","sourcesContent":["import { ValidatorFn, AbstractControl } from '@angular/forms';\nimport * as moment from 'moment';\nexport function dateValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const forbidden = !moment(control.value, 'DD/MM/YYYY', true).isValid();\n    return forbidden ? { forbiddenDate: { value: control.value } } : null;\n  };\n}\n","import { ValidatorFn, FormGroup } from '@angular/forms';\nimport { AppSettings } from '../app.settings';\nimport { MockData } from '../mock-data';\n\nconst COMMAND = {\n  [MockData.DOCUMENTS_TYPE[0].uid]: isValidNIF,\n  [MockData.DOCUMENTS_TYPE[1].uid]: isValidPassport,\n  [MockData.DOCUMENTS_TYPE[2].uid]: isValidOther,\n  execute: function(documentType, params) {\n    const type = documentType.uid;\n    return !this[type](params);\n  }\n};\nfunction isValidNIF(nif: string): boolean {\n  let isValid = false;\n  let fixedNIF = nif.toUpperCase();\n\n  let correctDigit = '';\n  let writtenDigit = '';\n\n  if (!/^[A-Z]+$/i.test(fixedNIF.substr(1, 1))) {\n    fixedNIF = '000000000' + nif;\n    fixedNIF = fixedNIF.substr(-9);\n  }\n\n  writtenDigit = nif.substr(-1, 1);\n\n  if (isValidNIFFormat(fixedNIF)) {\n    correctDigit = getNIFCheckDigit(fixedNIF);\n\n    if (writtenDigit == correctDigit) {\n      isValid = true;\n    }\n  }\n  return isValid;\n}\nfunction isValidNIFFormat(docNumber) {\n  return respectsDocPattern(\n    docNumber,\n    /^[KLM0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][A-Z0-9]/\n  );\n}\nfunction respectsDocPattern(givenString, pattern) {\n  let isValid = false;\n\n  let fixedString = givenString.toUpperCase();\n  const firstChar = parseInt(fixedString.substr(0, 1), 10);\n\n  if (firstChar % 1 === 0) {\n    fixedString = '000000000' + fixedString;\n    fixedString = fixedString.substr(-9);\n  }\n\n  if (pattern.test(fixedString)) {\n    isValid = true;\n  }\n\n  return isValid;\n}\nfunction getNIFCheckDigit(docNumber) {\n  const keyString = 'TRWAGMYFPDXBNJZSQVHLCKE';\n\n  let fixedDocNumber = docNumber.toUpperCase();\n\n  let position = 0;\n  let writtenLetter = '';\n  let correctLetter = '';\n\n  if (!/^[A-Z]+$/i.test(fixedDocNumber.substr(1, 1))) {\n    fixedDocNumber = '000000000' + fixedDocNumber;\n    fixedDocNumber = fixedDocNumber.substr(-9);\n  } else {\n    fixedDocNumber = docNumber.toUpperCase();\n  }\n\n  if (isValidNIFFormat(fixedDocNumber)) {\n    writtenLetter = fixedDocNumber.substr(-1);\n\n    fixedDocNumber = fixedDocNumber.replace('K', '0');\n    fixedDocNumber = fixedDocNumber.replace('L', '0');\n    fixedDocNumber = fixedDocNumber.replace('M', '0');\n\n    position = fixedDocNumber.substr(0, 8) % 23;\n    correctLetter = keyString.substr(position, 1);\n  }\n\n  return correctLetter;\n}\n\nfunction isValidPassport(passport: string): boolean {\n  //TODO: This code is not develop yet.\n  return true;\n}\nfunction isValidOther(other: string): boolean {\n  return true;\n}\nexport function documentNumberValidator(): ValidatorFn {\n  return (form: FormGroup): { [key: string]: any } | null => {\n    const documentType = form.controls['documentType'].value;\n    const documentNumber = form.controls['documentNumber'].value;\n    const forbidden = COMMAND.execute(documentType, documentNumber);\n    return forbidden\n      ? { documentNumberForbbiden: { value: documentNumber } }\n      : null;\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile.component';\nimport { ProfileStudySmartComponent } from './profile-student/study/profile-study-smart.component';\nimport { ProfileLanguageSmartComponent } from './profile-student/language/profile-language-smart.component';\nimport { ProfileAccountSmartComponent } from './profile-student/account/profile-account-smart.component';\nimport { WorkExperiencieSmartComponent } from './profile-student/work-experience/work-experiencie-smart.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileComponent\n  },\n  {\n    path: 'profile-student/account',\n    component: ProfileAccountSmartComponent\n  },\n  {\n    path: 'profile-student/study',\n    component: ProfileStudySmartComponent\n  },\n  {\n    path: 'profile-student/study/:uid',\n    component: ProfileStudySmartComponent\n  },\n  {\n    path: 'profile-student/language',\n    component: ProfileLanguageSmartComponent\n  },\n  {\n    path: 'profile-student/language/:uid',\n    component: ProfileLanguageSmartComponent\n  },\n  {\n  path: 'profile-student/work-experiencie',\n  component: WorkExperiencieSmartComponent\n  },\n  {\n  path: 'profile-student/work-experiencie/:uid',\n  component: WorkExperiencieSmartComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule {}\n","import { Component, OnInit,ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { AppStore } from 'src/app/shared/models/store.interface';\nimport * as UserSelector from '../../../../shared/state/user/selectors/user.selector';\n@Component({\n  selector: 'app-profile-account-smart',\n  template: `<app-profile-account\n    [user]=\"users$|async\"></app-profile-account>`,\n  \n})\nexport class ProfileAccountSmartComponent implements OnInit {\n  public users$: Observable<any> = this.store$.select(UserSelector.selectAll);\n  \n  constructor(private store$: Store<AppStore>) { }\n  \n  ngOnInit() {\n  \n  }\n\n}\n","import { Component, OnInit,ChangeDetectionStrategy, OnChanges,Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MockData } from 'src/app/shared/mock-data';\r\nimport { dateValidator } from 'src/app/shared/directives/date-validator.directive';\r\nimport { User, DocumentType, Municipe, Province} from 'src/app/shared/models/user.model';\r\nimport { documentNumberValidator } from 'src/app/shared/directives/document-number-validator.directive';\r\nimport { Store } from '@ngrx/store';\r\nimport * as UserActions from '../../../../shared/state/user/actions/user.actions';\r\n//Importado para modificar el formato fecha\r\nimport { MAT_MOMENT_DATE_FORMATS,  MomentDateAdapter,  MAT_MOMENT_DATE_ADAPTER_OPTIONS,} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile-account',\r\n  templateUrl: './profile-account.component.html',\r\n  styleUrls: ['./profile-account.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    // The locale would typically be provided on the root module of your application. We do it at\r\n    // the component level here, due to limitations of our example generation script.\r\n    {provide: MAT_DATE_LOCALE, useValue: 'es-ES'},\r\n\r\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\r\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\r\n    // here, due to limitations of our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\n\r\n\r\nexport class ProfileAccountComponent implements OnInit {\r\n  @Input() user: User;\r\n  rForm: FormGroup;\r\n  documentsType: DocumentType[];\r\n  municipes: Municipe[];\r\n  provinces: Province[];\r\n  birthdate = new FormControl(new Date());\r\n\r\n  constructor(private store$: Store<User>,private router: Router) {\r\n  }\r\n  ngOnInit() {\r\n    this.loadSelectProperties();\r\n    this.loadFormInstance();\r\n  }\r\n  public loadSelectProperties(): void {\r\n    this.documentsType = MockData.DOCUMENTS_TYPE;\r\n    this.municipes = MockData.MUNICIPES;\r\n    this.provinces = MockData.PROVINCES;\r\n  }\r\n\r\n  public loadFormInstance(): void {\r\n    this.rForm = new FormGroup(\r\n      {\r\n        name: new FormControl(this.user.name, [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(55),\r\n          Validators.pattern(/^[a-zA-Z]+$/)\r\n        ]),\r\n        surname: new FormControl(this.user.surname, [\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(55),\r\n          Validators.pattern(/^[a-zA-Z]+$/)\r\n        ]),\r\n        phone: new FormControl(this.user.phone, [\r\n          Validators.pattern(/^[0-9]{6,}$/),\r\n          Validators.required\r\n        ]),\r\n        phone2: new FormControl(this.user.phone2, [\r\n          Validators.pattern(/^[0-9]{6,}$/),\r\n          Validators.required\r\n        ]),\r\n\r\n        birthdate: new FormControl(this.user.birthdate, [\r\n          Validators.required,\r\n          dateValidator()\r\n        ]),\r\n        documentType: new FormControl(this.user.documentType, [\r\n          Validators.required\r\n        ]),\r\n        documentNumber: new FormControl(this.user.documentNumber, [\r\n          Validators.required\r\n        ]),\r\n        street: new FormControl(this.user.address.street, [\r\n          Validators.required\r\n        ]),\r\n        municipe: new FormControl(this.user.address.municipe, [\r\n          Validators.required\r\n        ]),\r\n        province: new FormControl(this.user.address.province, [\r\n          Validators.required\r\n        ]),\r\n        aboutMe: new FormControl(this.user.aboutMe),\r\n        otherCompetences: new FormControl(this.user.aboutMe),\r\n        license: new FormControl(this.user.license)\r\n      },\r\n      documentNumberValidator()\r\n    );\r\n  }\r\n\r\n  public save() {\r\n    const user = { ...this.user, ...this.rForm.value };\r\n    this.store$.dispatch(new UserActions.Update(user));\r\n    this.router.navigate(['/admin/profile']);\r\n  }\r\n  compareByUID(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n \r\n}\r\n","<section style=\"clear:both;padding-bottom:2em;\"></section>\r\n\r\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\r\n    <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title class=\"title_card\">Editar Perfil</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content> \r\n\r\n      <form [formGroup]=\"rForm\" (submit)=\"save()\">\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput \r\n          name=\"name\"\r\n          formControlName=\"name\">\r\n          <mat-hint align=\"end\">Indica el nombre^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Apellidos</mat-label>\r\n          <input matInput \r\n          name=\"surname\"\r\n          formControlName=\"surname\">\r\n          <mat-hint align=\"end\">Indica los apellidos^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"sizeField\">\r\n          <input matInput [matDatepicker]=\"picker1\" formControlName=\"birthdate\" placeholder=\"Cumpleaños\" >\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\" ></mat-datepicker-toggle>\r\n          <mat-datepicker #picker1 ></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Teléfono</mat-label>\r\n          <input matInput #input maxlength=\"9\" \r\n          name=\"phone\"\r\n          formControlName=\"phone\">\r\n          <mat-hint align=\"end\">{{input.value?.length || 0}}/9</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Teléfono2</mat-label>\r\n          <input matInput #input maxlength=\"9\" \r\n          name=\"phone2\"\r\n          formControlName=\"phone2\">\r\n          <mat-hint align=\"end\">{{input.value?.length || 0}}/9</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Tipo de documento</mat-label>\r\n            <mat-select\r\n            name=\"documentType\"\r\n            formControlName=\"documentType\"\r\n            [compareWith]=\"compareByUID\">\r\n              <mat-option [value]=\"documentType\" *ngFor=\"let documentType of documentsType\">\r\n                {{ documentType.name }}</mat-option>\r\n            </mat-select>\r\n          <mat-hint align=\"end\">Seleciona documento identificación ^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Número de documento</mat-label>\r\n          <input matInput #input maxlength=\"9\" \r\n          name=\"documentNumber\"\r\n          formControlName=\"documentNumber\">\r\n          <mat-hint align=\"end\">{{input.value?.length || 0}}/9</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Calle</mat-label>\r\n          <input matInput \r\n          name=\"street\"\r\n          formControlName=\"street\">\r\n          <mat-hint align=\"end\">Introduce dirección^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Provincia</mat-label>\r\n            <mat-select\r\n            name=\"province\"\r\n            formControlName=\"province\"\r\n            [compareWith]=\"compareByUID\">\r\n              <mat-option [value]=\"province\" *ngFor=\"let province of provinces\">\r\n                {{ province.name }}</mat-option>\r\n            </mat-select>\r\n          <mat-hint align=\"end\">Seleciona provincia ^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Municipio</mat-label>\r\n            <mat-select\r\n            name=\"municipe\"\r\n            formControlName=\"municipe\"\r\n            [compareWith]=\"compareByUID\">\r\n              <mat-option [value]=\"municipe\" *ngFor=\"let municipe of municipes\">\r\n                {{ municipe.name }}</mat-option>\r\n            </mat-select>\r\n          <mat-hint align=\"end\">Seleciona municipio ^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Acerca de mi</mat-label>\r\n          <textarea matInput \r\n          name=\"aboutMe\"\r\n          formControlName=\"aboutMe\"></textarea>\r\n          <mat-hint align=\"end\">Detalles sobre mi^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Otras competencias</mat-label>\r\n          <textarea matInput \r\n          name=\"otherCompetences\"\r\n          formControlName=\"otherCompetences\"></textarea>\r\n          <mat-hint align=\"end\">Detalles otras competencias^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Licencias</mat-label>\r\n          <input matInput \r\n          name=\"license\"\r\n          formControlName=\"license\">\r\n          <mat-hint align=\"end\">Introduce permiso^</mat-hint>\r\n        </mat-form-field>\r\n\r\n  \r\n        <div class=\"buttonCenter\">\r\n          <button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\" [disabled]=\"rForm.invalid\"><mat-icon class=\"icon\"> save</mat-icon>Guardar</button>\r\n          </div>\r\n        \r\n      </form>\r\n\r\n</mat-card-content> \r\n</mat-card>\r\n</div>\r\n\r\n<!-- SIN MATERIAL\r\n\r\n   <form [formGroup]=\"rForm\" (submit)=\"save()\">\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"name\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"birthdate\">surname</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"surname\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"surname\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"birthdate\">birthdate</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"birthdate\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"birthdate\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"phone\">phone</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"phone\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"phone2\">phone2</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone2\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"phone2\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"level\">Tipo de documento</label>\r\n          <select\r\n            [compareWith]=\"compareByUID\"\r\n            class=\"col-sm-10 form-control\"\r\n            name=\"documentType\"\r\n            formControlName=\"documentType\"\r\n          >\r\n            <option\r\n              [ngValue]=\"documentType\"\r\n              *ngFor=\"let documentType of documentsType\"\r\n            >\r\n              {{ documentType.name }}</option\r\n            >\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"documentNumber\">documentNumber</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"documentNumber\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"documentNumber\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"street\">Calle</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"street\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"street\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"level\">Provincia</label>\r\n          <select\r\n            [compareWith]=\"compareByUID\"\r\n            class=\"col-sm-10 form-control\"\r\n            name=\"province\"\r\n            formControlName=\"province\"\r\n          >\r\n            <option [ngValue]=\"province\" *ngFor=\"let province of provinces\">\r\n              {{ province.name }}</option\r\n            >\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"level\">Municipio</label>\r\n          <select\r\n            [compareWith]=\"compareByUID\"\r\n            class=\"col-sm-10 form-control\"\r\n            name=\"municipe\"\r\n            formControlName=\"municipe\"\r\n          >\r\n            <option [ngValue]=\"municipe\" *ngFor=\"let municipe of municipes\">\r\n              {{ municipe.name }}</option\r\n            >\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"aboutMe\">Acerca de mi</label>\r\n          <textarea\r\n            name=\"aboutMe\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"aboutMe\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"otherCompetences\">Otras competencias</label>\r\n          <textarea\r\n            name=\"otherCompetences\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"otherCompetences\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"license\">Licencias</label>\r\n          <textarea\r\n            name=\"license\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"license\"\r\n          ></textarea>\r\n        </div>\r\n//Va comentada         <div class=\"form-group\">\r\n          <label for=\"level\">Nivel</label>\r\n          <select\r\n            [compareWith]=\"compareLevel\"\r\n            class=\"col-sm-10 form-control\"\r\n            name=\"level\"\r\n            formControlName=\"level\"\r\n          >\r\n            <option [ngValue]=\"level\" *ngFor=\"let level of languageLevels\">\r\n              {{ level.name }}</option\r\n            >\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Idioma</label>\r\n          <select\r\n            class=\"col-sm-10 form-control\"\r\n            name=\"name\"\r\n            formControlName=\"name\"\r\n            [compareWith]=\"compareName\"\r\n          >\r\n            <option [ngValue]=\"name\" *ngFor=\"let name of languageNames\">\r\n              {{ name.name }}</option\r\n            >\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"date\">Fecha de obtención del título</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"date\"\r\n            class=\"col-sm-10 form-control\"\r\n            formControlName=\"date\"\r\n          />\r\n        </div>   //Va descomentada\r\n\r\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"rForm.invalid\">\r\n          Guardar\r\n        </button>\r\n      </form>\r\n\r\n-->","import { Component, OnInit,ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { AppStore } from 'src/app/shared/models/store.interface';\nimport * as UserSelector from '../../../../shared/state/user/selectors/user.selector';\n@Component({\n  selector: 'app-profile-account-smart',\n  template: `<app-profile-language\n    [user]=\"users$|async\"></app-profile-language>`,\n  \n})\nexport class ProfileLanguageSmartComponent implements OnInit {\n  public users$: Observable<any> = this.store$.select(UserSelector.selectAll);\n  \n  constructor(private store$: Store<AppStore>) { }\n  \n  ngOnInit() {\n  \n  }\n\n}\n","import { Component, OnInit,Input, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MockData } from 'src/app/shared/mock-data';\r\nimport { Language,LanguageLevel,LanguageName} from 'src/app/shared/models/language.model';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { dateValidator } from 'src/app/shared/directives/date-validator.directive';\r\nimport { Store } from '@ngrx/store';\r\nimport * as UserActions from '../../../../shared/state/user/actions/user.actions';\r\n//Importado para modificar el formato fecha\r\nimport { MAT_MOMENT_DATE_FORMATS,  MomentDateAdapter,  MAT_MOMENT_DATE_ADAPTER_OPTIONS,} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-profile-language',\r\n  templateUrl: './profile-language.component.html',\r\n  styleUrls: ['./profile-language.component.scss'],\r\n  providers: [\r\n    // The locale would typically be provided on the root module of your application. We do it at\r\n    // the component level here, due to limitations of our example generation script.\r\n    {provide: MAT_DATE_LOCALE, useValue: 'es-ES'},\r\n\r\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\r\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\r\n    // here, due to limitations of our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\nexport class ProfileLanguageComponent implements OnInit  {\r\n  @Input() user:User;\r\n  \r\n  rForm: FormGroup;\r\n  language: Language = {} as Language;\r\n  languageLevels: LanguageLevel[];\r\n  languageNames: LanguageName[];\r\n  userTemp:User;\r\n  uid:number;\r\n  \r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private store$: Store<User>\r\n  ) {\r\n    this.route.params.subscribe(params => {\r\n      this.uid = +params.uid;\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  //Dependiendo del Id pasado por parámetro hará un nuevo lenguaje o actualizará\r\n    this.language = (this.user.languages.find(language => language.uid === this.uid) || {}) as Language;\r\n    this.loadSelectProperties();\r\n    this.loadFormInstance();\r\n    \r\n  }\r\n  public loadSelectProperties(): void {\r\n    this.languageLevels = MockData.LANGUAGES_LEVEL;\r\n    this.languageNames = MockData.LANGUAGES_NAME;\r\n  }\r\n\r\n  public loadFormInstance(): void {\r\n    this.rForm = new FormGroup({\r\n      level: new FormControl(this.language.level, [Validators.required]),\r\n      name: new FormControl(this.language.name, [Validators.required]),\r\n      date: new FormControl(this.language.date, [\r\n        Validators.required,\r\n        dateValidator()\r\n      ])\r\n    });\r\n  }\r\n  public submit() {\r\n    this.saveOrUpdate({ ...this.language, ...this.rForm.value });\r\n  }\r\n\r\n  compareLevel(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n  compareName(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n  private update(language: Language) {\r\n       const languages = this.user.languages.map(_language =>\r\n      _language.uid === language.uid ? language : _language\r\n    );\r\n    console.log(languages);\r\n    const user = {...this.user,languages};\r\n    console.log(user);\r\n    this.store$.dispatch(new UserActions.Update(user));\r\n\r\n  }\r\n  private save(language: Language) {\r\n      const _language = MockData.fakeIncreaseID<Language>(\r\n      this.user.languages,\r\n      language\r\n    );\r\n    const languages = [...this.user.languages,_language];\r\n    const user = {...this.user,languages};\r\n    this.store$.dispatch(new UserActions.Update(user));\r\n  }\r\n\r\n  saveOrUpdate(language: Language) {\r\n    //Aquí lanza una función de nuevo o update dependiendo de si el uid existe en el array language.\r\n    this.isNew() ? this.save(language) : this.update(language);\r\n  }\r\n  public isNew(): boolean {\r\n    return !!!this.language.uid;\r\n  }\r\n}\r\n","<div *ngIf=\"user\">\r\n  <section style=\"clear:both;padding-bottom:2em;\"></section>\r\n\r\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\r\n    <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title class=\"title_card\">Añadir/Editar Idioma</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content> \r\n\r\n      <form [formGroup]=\"rForm\" (submit)=\"submit()\">\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Nivel</mat-label>\r\n            <mat-select\r\n            name=\"level\"\r\n            formControlName=\"level\"\r\n            [compareWith]=\"compareLevel\">\r\n              <mat-option [value]=\"level\" *ngFor=\"let level of languageLevels\">\r\n                {{ level.name }}</mat-option>\r\n            </mat-select>\r\n          <mat-hint align=\"end\">Seleciona documento identificación ^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n          <mat-label>Idioma</mat-label>\r\n            <mat-select\r\n            name=\"name\"\r\n            formControlName=\"name\"\r\n            [compareWith]=\"compareName\">\r\n              <mat-option [value]=\"name\" *ngFor=\"let name of languageNames\">\r\n                {{ name.name }}</mat-option>\r\n            </mat-select>\r\n          <mat-hint align=\"end\">Seleciona documento identificación ^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"sizeField\">\r\n          <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" placeholder=\"Fecha de obtención del título\" >\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\" ></mat-datepicker-toggle>\r\n          <mat-datepicker #picker1 ></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <div class=\"buttonCenter\">\r\n          <button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\" [disabled]=\"rForm.invalid\"><mat-icon class=\"icon\"> save</mat-icon>Guardar</button>\r\n          </div>\r\n          \r\n      </form>\r\n\r\n    </mat-card-content> \r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!-- SIN MATERIAL\r\n  <div *ngIf=\"user\">\r\n<form [formGroup]=\"rForm\" (submit)=\"submit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"level\">Nivel</label>\r\n    <select\r\n      [compareWith]=\"compareLevel\"\r\n      class=\"col-sm-10 form-control\"\r\n      name=\"level\"\r\n      formControlName=\"level\"\r\n    >\r\n      <option [ngValue]=\"level\" *ngFor=\"let level of languageLevels\">\r\n        {{ level.name }}</option\r\n      >\r\n    </select>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">Idioma</label>\r\n    <select\r\n      class=\"col-sm-10 form-control\"\r\n      name=\"name\"\r\n      formControlName=\"name\"\r\n      [compareWith]=\"compareName\"\r\n    >\r\n      <option [ngValue]=\"name\" *ngFor=\"let name of languageNames\">\r\n        {{ name.name }}</option\r\n      >\r\n    </select>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"date\">Fecha de obtención del título</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"date\"\r\n      class=\"col-sm-10 form-control\"\r\n      formControlName=\"date\"\r\n    />\r\n  </div>\r\n\r\n  <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"rForm.invalid\">\r\n    Guardar\r\n  </button>\r\n</form>\r\n</div>\r\n-->","import { Component,ChangeDetectionStrategy,Input, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { Store } from '@ngrx/store';\r\nimport * as UserActions from '../../../shared/state/user/actions/user.actions';\r\n\r\n@Component({\r\n  selector: 'app-profile-student',\r\n  templateUrl: './profile-student.component.html',\r\n  styleUrls: ['./profile-student.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProfileStudentComponent implements OnInit {\r\n  @Input() user:User;\r\n  \r\n  displayedColumnsFormation: string[] = ['tipo','nivel','title','institution','date','certificate','bilingue','dual','action'];\r\n  displayedColumnsExperience: string[] = ['empresa','date_incio','date_fin','puesto','tareas','action'];\r\n  displayedColumnsLanguage: string[] = ['level','language','date','action'];\r\n  \r\n  constructor(private store$:Store) {}\r\n \r\n  ngOnInit(){\r\n    console.log(this.user.studies);\r\n  }\r\n\r\n  deleteStudy(studyID: any) {\r\n    const studies = [...this.user.studies];\r\n    const uid = studies.findIndex(study => study.uid === studyID);\r\n    studies.splice(uid,1);\r\n    \r\n    const user = {...this.user,studies};\r\n    this.store$.dispatch(new UserActions.Update(user));\r\n    console.log(this.user);\r\n    \r\n  }\r\n  deleteLanguage(languageID: any) {\r\n    const languages = [...this.user.languages];\r\n    const uid = languages.findIndex(language=>language.uid === languageID);\r\n    languages.splice(uid,1);\r\n\r\n    const user = {...this.user,languages};\r\n    this.store$.dispatch(new UserActions.Update(user));\r\n    console.log(this.user);\r\n  }\r\n\r\n  deleteExperiencie(experiencieID: any) {\r\n    const experiencies = [...this.user.experiencies];\r\n    const uid = experiencies.findIndex(experiencie=>experiencie.uid === experiencieID);\r\n    experiencies.splice(uid,1);\r\n\r\n    const user = {...this.user,experiencies};\r\n    this.store$.dispatch(new UserActions.Update(user));\r\n    console.log(this.user);\r\n  }\r\n}\r\n","<div *ngIf=\"user\">\r\n  <section style=\"clear:both;padding-bottom:2em;\"></section>\r\n  \r\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\r\n    <mat-card>\r\n    <mat-card-header >\r\n      <mat-card-title class=\"title_card\">Perfil</mat-card-title>\r\n    </mat-card-header>\r\n    <!--<img mat-card-image src=\"{{ user.avatar_hash }}\" alt=\"Photo of a Shiba Inu\">-->\r\n    <div class=\"contenedor\">\r\n      <div id=\"foto-perfil\" class=\"text-center pr-5\" >\r\n        <div>\r\n          <img\r\n            class=\"img-fluid img-profile rounded-circle mx-auto mb-2\"\r\n            src=\"{{ user.avatar_hash }}\"\r\n          />\r\n          <div >\r\n            {{ user.name + ' ' + user.surname }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <section id=\"datosPersonales\" >\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>Email</th>\r\n              <td>{{ user.email }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Fecha de nacimiento</th>\r\n              <td>{{ user.birthdate |date:'d/M/yyyy' }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Tel&eacute;fono</th>\r\n              <td>{{ user.phone }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>NIF/NIE</th>\r\n              <td>{{ user.documentNumber }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Permisos de conducir</th>\r\n              <td>{{ user.license }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Direccion</th>\r\n              <td>{{ user.address | json }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div id=\"otra_info\" >\r\n          <form>\r\n            <div class=\"float-left\">\r\n              <label for=\"about-me\">Acerca de mi...</label><br />\r\n              <textarea readonly=\"true\" id=\"about-me\" name=\"about-me\">{{\r\n                user.aboutMe\r\n              }}</textarea>\r\n            </div>\r\n            <div>\r\n              <label for=\"other\">Otras competencias</label> <br />\r\n      \r\n              <textarea readonly=\"true\" id=\"other\" name=\"other\">{{\r\n                user.otherCompetences\r\n              }}</textarea>\r\n            </div>\r\n          </form>\r\n        </div>  \r\n      </section>\r\n     \r\n    </div>      \r\n    <mat-card-content>\r\n      \r\n    </mat-card-content>\r\n    <mat-card-actions class=\"cont\">\r\n      <button mat-raised-button color=\"primary\" class=\"button\"><a [routerLink]=\"['/admin/profile/profile-student/account']\">Modificar</a></button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n  <!--\r\n  <div class=\"float-left\" id=\"foto-perfil\">\r\n    <div>\r\n      <img\r\n        class=\"img-fluid img-profile rounded-circle mx-auto mb-2\"\r\n        src=\"{{ user.avatar_hash }}\"\r\n      />\r\n    </div>\r\n    <div class=\"text-center pr-5\">\r\n      {{ user.name + ' ' + user.surname }}\r\n    </div>\r\n  </div>\r\n\r\n  <section id=\"datosPersonales\" class=\"float-left\">\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th>Email</th>\r\n          <td>{{ user.email }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Fecha de nacimiento</th>\r\n          <td>{{ user.birthdate }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Tel&eacute;fono</th>\r\n          <td>{{ user.phone }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>NIF/NIE</th>\r\n          <td>{{ user.documentNumber }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Permisos de conducir</th>\r\n          <td>{{ user.license }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Direccion</th>\r\n          <td>{{ user.address | json }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <a [routerLink]=\"['/admin/profile/profile-student/account']\">Modificar</a>\r\n  </section>\r\n  <div id=\"otra_info\" class=\"float-left\">\r\n    <form>\r\n      <div class=\"float-left\">\r\n        <label for=\"about-me\">Acerca de mi...</label><br />\r\n        <textarea readonly=\"true\" id=\"about-me\" name=\"about-me\">{{\r\n          user.aboutMe\r\n        }}</textarea>\r\n      </div>\r\n      <div class=\"float-left\">\r\n        <label for=\"other\">Otras competencias</label> <br />\r\n\r\n        <textarea readonly=\"true\" id=\"other\" name=\"other\">{{\r\n          user.otherCompetences\r\n        }}</textarea>\r\n      </div>\r\n    </form>\r\n  </div>\r\n-->\r\n  <section style=\"clear:both;padding-bottom:2em;\"></section>\r\n\r\n \r\n\r\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\r\n    <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title class=\"title_card\">Formación Académica</mat-card-title>\r\n    </mat-card-header>\r\n    \r\n    <mat-card-content>\r\n      <table mat-table [dataSource]=\"user.studies\" class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"tipo\" >\r\n          <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Tipo </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.level.name}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"nivel\" >\r\n          <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Nivel </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\">  {{element.grade?.name}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"title\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Título </th>\r\n          <td mat-cell *matCellDef=\"let element\"  class=\"columnSeparation\"> {{element.title.name || element.title}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"institution\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Centro </th>\r\n          <td mat-cell *matCellDef=\"let element\"  class=\"columnSeparation\"> {{element.institution.name || element.institution}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"date\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\" > Fecha </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\" > {{element.date | date:'d/M/yyyy'}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"certificate\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Certificado </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\" > {{element.certificate ? 'Sí' : 'No' }} </td>\r\n        </ng-container>\r\n       \r\n        <ng-container matColumnDef=\"bilingue\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Bilingüe </th>\r\n          <td mat-cell *matCellDef=\"let element\"  class=\"columnSeparation\"> {{element.bilingue ? 'Sí' : 'No' }} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"dual\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Dual </th>\r\n          <td mat-cell *matCellDef=\"let element\"  class=\"columnSeparation\"> {{element.dual ? 'Sí' : 'No' }} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Acciones </th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> \r\n            <button mat-mini-fab color=\"accent\" class=\"buttonseparacion\"><a [routerLink]=\"['/admin/profile/profile-student/study', element.uid]\"><mat-icon> create</mat-icon></a></button>\r\n            <button mat-mini-fab color=\"warn\" class=\"buttonseparacion\"><a style=\"cursor:pointer\" (click)=\"deleteStudy(element.uid)\"><mat-icon> delete_sweep</mat-icon></a></button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumnsFormation\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumnsFormation;\"></tr>\r\n      </table>\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"cont\">\r\n      <button mat-raised-button color=\"primary\" class=\"button\"><a [routerLink]=\"['/admin/profile/profile-student/study']\"><mat-icon> add_circle</mat-icon>Nueva Formación</a></button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <!--///////////////////-->\r\n<!--\r\n  <h2>Formaci&oacute;n acad&eacute;mica</h2>\r\n  <section id=\"formacion_academica\">\r\n    <table class=\"table table-bordered table-striped\">\r\n      <thead class=\"thead-light\">\r\n        <th>Tipo</th>\r\n        <th>Nivel</th>\r\n        <th>T&iacute;tulo</th>\r\n        <th>Centro</th>\r\n        <th>Fecha</th>\r\n        <th>Certificado</th>\r\n        <th>Bilingüe</th>\r\n        <th>Dual</th>\r\n        <th>Acciones</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let study of user.studies; let i = index\">\r\n          <td>{{ study.level.name }}</td>\r\n          <td>{{ study.grade?.name }}</td>\r\n\r\n          <td>{{ study.title.name || study.title }}</td>\r\n          <td>{{ study.institution.name || study.institution }}</td>\r\n          <td>{{ study.date }}</td>\r\n          <td>{{ study.certificate ? 'Sí' : 'No' }}</td>\r\n          <td>{{ study.bilingue ? 'Sí' : 'No' }}</td>\r\n          <td>{{ study.dual ? 'Sí' : 'No' }}</td>\r\n\r\n          <td>\r\n            <a\r\n              [routerLink]=\"['/admin/profile/profile-student/study', study.uid]\"\r\n              >Editar</a\r\n            >\r\n            |\r\n            <a style=\"cursor:pointer\" (click)=\"deleteStudy(study.uid)\"\r\n              >Borrar</a\r\n            >\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <a [routerLink]=\"['/admin/profile/profile-student/study']\"\r\n      >Nueva formación</a\r\n    >\r\n  </section>\r\n\r\n  -->\r\n\r\n  <section style=\"clear:both;padding-bottom:2em;\"></section>\r\n\r\n<div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\r\n  <mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title class=\"title_card\">Experiencia laboral</mat-card-title>\r\n  </mat-card-header>\r\n  \r\n  <mat-card-content>\r\n    <table mat-table [dataSource]=\"user.experiencies\" class=\"mat-elevation-z8\">\r\n\r\n      <ng-container matColumnDef=\"empresa\" >\r\n        <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Empresa </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.empresa}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"date_incio\" >\r\n        <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Fecha de Inicio </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\">  {{element.date_incio | date:'d/M/yyyy'}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"date_fin\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Fecha Fin </th>\r\n        <td mat-cell *matCellDef=\"let element\"  class=\"columnSeparation\"> {{element.date_fin | date:'d/M/yyyy'}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"puesto\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Puesto </th>\r\n        <td mat-cell *matCellDef=\"let element\"  class=\"columnSeparation\"> {{element.puesto}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"tareas\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Tareas </th>\r\n        <td mat-cell *matCellDef=\"let element\"  class=\"columnSeparation\"> {{element.tareas}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Acciones </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> \r\n          <button mat-mini-fab color=\"accent\" class=\"buttonseparacion\"><a [routerLink]=\"['/admin/profile/profile-student/work-experiencie',element.uid]\"><mat-icon> create</mat-icon></a></button>\r\n          <button mat-mini-fab color=\"warn\" class=\"buttonseparacion\"><a style=\"cursor:pointer\" (click)=\"deleteExperiencie(element.uid)\"><mat-icon> delete_sweep</mat-icon></a></button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\" displayedColumnsExperience\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns:  displayedColumnsExperience;\"></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"cont\">\r\n    <button mat-raised-button color=\"primary\" class=\"button\"><a [routerLink]=\"['/admin/profile/profile-student/work-experiencie']\"><mat-icon> add_circle</mat-icon>Nueva experiencia laboral</a></button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n\r\n<!--////////////////-->\r\n<!--\r\n  <h2>Experiencia laboral</h2>\r\n  <section id=\"experiencies\">\r\n    <table class=\"table table-bordered table-striped\">\r\n      <thead class=\"thead-light\">\r\n        <th>Empresa</th>\r\n        <th>Fecha Inicio</th>\r\n        <th>Fecha Fin</th>\r\n        <th>Puesto</th>\r\n        <th>Tareas</th>\r\n        <th>Acciones</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let experiencie of user.experiencies\">\r\n          <td>{{ experiencie.empresa }}</td>\r\n          <td>{{ experiencie.date_incio }}</td>\r\n          <td>{{ experiencie.date_fin }}</td>\r\n          <td>{{ experiencie.puesto }}</td>\r\n          <td>{{ experiencie.tareas }}</td>\r\n          <td>\r\n            <a\r\n              [routerLink]=\"[\r\n                '/admin/profile/profile-student/work-experiencie',\r\n                experiencie.uid\r\n              ]\"\r\n              >Editar</a\r\n            >\r\n            |\r\n            <a style=\"cursor:pointer\" (click)=\"deleteExperiencie(experiencie.uid)\"\r\n              >Borrar</a\r\n            >\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <a [routerLink]=\"['/admin/profile/profile-student/work-experiencie']\"\r\n      >Nuevo idioma</a\r\n    >\r\n  </section>\r\n-->\r\n\r\n<section style=\"clear:both;padding-bottom:2em;\"></section>\r\n\r\n<div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\r\n  <mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title class=\"title_card\">Idiomas</mat-card-title>\r\n  </mat-card-header>\r\n  \r\n  <mat-card-content>\r\n    <table mat-table [dataSource]=\"user.languages\" class=\"mat-elevation-z8\">\r\n\r\n      <ng-container matColumnDef=\"level\" >\r\n        <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Nivel </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.level.name}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"language\" >\r\n        <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Idioma </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\">  {{element.name.name}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"date\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Fecha </th>\r\n        <td mat-cell *matCellDef=\"let element\"  class=\"columnSeparation\"> {{element.date | date:'d/M/yyyy'}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"action\">\r\n        <th mat-header-cell *matHeaderCellDef  class=\"columnSeparation\"> Acciones </th>\r\n        <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> \r\n          <button mat-mini-fab color=\"accent\" class=\"buttonseparacion\"><a [routerLink]=\"['/admin/profile/profile-student/language',element.uid]\"><mat-icon> create</mat-icon></a></button>\r\n          <button mat-mini-fab color=\"warn\" class=\"buttonseparacion\"><a style=\"cursor:pointer\" (click)=\"deleteLanguage(element.uid)\"><mat-icon> delete_sweep</mat-icon></a></button>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\" displayedColumnsLanguage\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns:  displayedColumnsLanguage;\"></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"cont\">\r\n    <button mat-raised-button color=\"primary\" class=\"button\"><a [routerLink]=\"['/admin/profile/profile-student/language']\"><mat-icon> add_circle</mat-icon>Nuevo Idioma</a></button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n\r\n<!--\r\n\r\n  <h2>Idiomas</h2>\r\n  <section id=\"languages\">\r\n    <table class=\"table table-bordered table-striped\">\r\n      <thead class=\"thead-light\">\r\n        <th>Nivel</th>\r\n        <th>Idioma</th>\r\n        <th>Fecha</th>\r\n        <th>Acciones</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let language of user.languages\">\r\n          <td>{{ language.level.name }}</td>\r\n          <td>{{ language.name.name }}</td>\r\n          <td>{{ language.date }}</td>\r\n          <td>\r\n            <a\r\n              [routerLink]=\"[\r\n                '/admin/profile/profile-student/language',\r\n                language.uid\r\n              ]\"\r\n              >Editar</a\r\n            >\r\n            |\r\n            <a style=\"cursor:pointer\" (click)=\"deleteLanguage(language.uid)\"\r\n              >Borrar</a\r\n            >\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <a [routerLink]=\"['/admin/profile/profile-student/language']\"\r\n      >Nuevo idioma</a\r\n    >\r\n  </section>\r\n</div>\r\n\r\n-->","import { Component, OnInit,ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { AppStore } from 'src/app/shared/models/store.interface';\nimport * as UserSelector from '../../../../shared/state/user/selectors/user.selector';\n@Component({\n  selector: 'app-profile-study-smart',\n  template: `<app-profile-study\n    [user]=\"users$|async\"></app-profile-study>`,\n  \n})\nexport class ProfileStudySmartComponent implements OnInit {\n  public users$: Observable<any> = this.store$.select(UserSelector.selectAll);\n  \n  constructor(private store$: Store<AppStore>) { }\n  \n  ngOnInit() {\n  \n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {\r\n  Study,\r\n  VocationalStudy,\r\n  CollegeStudy\r\n} from 'src/app/shared/models/study.model';\r\nimport { MockData } from 'src/app/shared/mock-data';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { Store } from '@ngrx/store';\r\nimport * as UserActions from '../../../../shared/state/user/actions/user.actions';\r\n\r\n@Component({\r\n  selector: 'app-profile-study',\r\n  templateUrl: './profile-study.component.html',\r\n  styleUrls: ['./profile-study.component.scss']\r\n})\r\nexport class ProfileStudyComponent implements OnInit {\r\n  @Input() user:User;\r\n  studiesForm: FormGroup;\r\n  options = MockData.TYPE_STUDIES;\r\n  study: Study = {} as (VocationalStudy | CollegeStudy);\r\n  uid:number;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private store$: Store<User>\r\n  ) {\r\n    this.route.params.subscribe(params => {\r\n    //  Obtiene el identificador pasado por parámetro de la URL (así sabremos si hay que update o create experiencie)\r\n      this.uid = +params.uid;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.user);\r\n    this.study = (this.user.studies.find(study => study.uid === this.uid) || {}) as | VocationalStudy| CollegeStudy;\r\n    this.studiesForm = new FormGroup({\r\n      option: new FormControl(this.study.level, [Validators.required])\r\n    });\r\n  }\r\n  compareOption(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n\r\n  private update(study: VocationalStudy | CollegeStudy) {\r\n    const studies = this.user.studies.map(_study=>\r\n    _study.uid === study.uid ? study : _study )\r\n    \r\n    const user = {...this.user,studies};\r\n\r\n    this.store$.dispatch(new UserActions.Update(user));\r\n  }\r\n  private save(study: VocationalStudy | CollegeStudy) {\r\n   const _study = MockData.fakeIncreaseID<VocationalStudy | CollegeStudy>(this.user.studies,study);\r\n\r\n   console.log (_study);\r\n   const studies = [...this.user.studies,_study]; //Crea un Array studies añadiendo el _study a los this.user.studies existentes\r\n   const user = {...this.user,studies}; // Sustituye la propiedad de this.user por el nuevo array de studies creado\r\n\r\n   this.store$.dispatch(new UserActions.Update(user));\r\n  }\r\n\r\n  saveOrUpdate(study: VocationalStudy | CollegeStudy) {\r\n    study.level = this.studiesForm.get('option').value;\r\n    this.isNew() ? this.save(study) : this.update(study);\r\n  }\r\n  public isNew(): boolean {\r\n    return !!!this.study.uid;\r\n  }\r\n  public isSelectVocational(): boolean {\r\n    const value = this.studiesForm.get('option').value;\r\n    return value && value.uid === MockData.TYPE_STUDIES[0].uid;\r\n  }\r\n  public isSelectUniversity(): boolean {\r\n    const value = this.studiesForm.get('option').value;\r\n    return value && value.uid === MockData.TYPE_STUDIES[1].uid;\r\n  }\r\n  public backProfile() {\r\n    this.router.navigate(['/admin/profile']);\r\n  }\r\n}\r\n","<div *ngIf=\"user\">\r\n\r\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\r\n    <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title class=\"title_card\">Añadir/Editar Formación académica</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content> \r\n      <div class=\"example-container\">\r\n      \r\n        <form [formGroup]=\"studiesForm\">\r\n          <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n            <mat-label>Elige formación</mat-label>\r\n              <mat-select\r\n              [compareWith]=\"compareOption\"\r\n              formControlName=\"option\">\r\n              <mat-option value=\"---\">---</mat-option>\r\n                <mat-option [value]=\"option\" *ngFor=\"let option of options\">{{option.name}}</mat-option>\r\n              </mat-select>\r\n            <mat-hint align=\"end\">Seleciona opción del desplegable ^</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <app-vocational-form\r\n          *ngIf=\"isSelectVocational()\"\r\n          [study]=\"study\"\r\n          (onSave)=\"saveOrUpdate($event)\"\r\n        ></app-vocational-form>\r\n      \r\n        <app-university-degree-form\r\n          *ngIf=\"isSelectUniversity()\"\r\n          [study]=\"study\"\r\n          (onSave)=\"saveOrUpdate($event)\"\r\n        ></app-university-degree-form>\r\n        </form>\r\n      </div>\r\n    </mat-card-content> \r\n  </mat-card>\r\n  </div>\r\n\r\n<!--\r\n<form [formGroup]=\"studiesForm\" >\r\n  <select\r\n    class=\"col-sm-10 form-control\"\r\n    [compareWith]=\"compareOption\"\r\n    formControlName=\"option\"\r\n  >\r\n    <option selected>---</option>\r\n\r\n    <option [ngValue]=\"option\" *ngFor=\"let option of options\">{{option.name}}</option>\r\n  </select>\r\n\r\n  <app-vocational-form\r\n    *ngIf=\"isSelectVocational()\"\r\n    [study]=\"study\"\r\n    (onSave)=\"saveOrUpdate($event)\"\r\n  ></app-vocational-form>\r\n\r\n  <app-university-degree-form\r\n    *ngIf=\"isSelectUniversity()\"\r\n    [study]=\"study\"\r\n    (onSave)=\"saveOrUpdate($event)\"\r\n  ></app-university-degree-form>\r\n</form>\r\n-->\r\n</div>\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CollegeStudy } from 'src/app/shared/models/study.model';\nimport { dateValidator } from 'src/app/shared/directives/date-validator.directive';\n//Importado para modificar el formato fecha\nimport { MAT_MOMENT_DATE_FORMATS,  MomentDateAdapter,  MAT_MOMENT_DATE_ADAPTER_OPTIONS,} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n@Component({\n  selector: 'app-university-degree-form',\n  templateUrl: './university-degree-form.component.html',\n  styleUrls: ['./university-degree-form.component.scss'],\n  providers: [\n    // The locale would typically be provided on the root module of your application. We do it at\n    // the component level here, due to limitations of our example generation script.\n    {provide: MAT_DATE_LOCALE, useValue: 'es-ES'},\n\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class UniversityDegreeComponent {\n  @Output() onSave: EventEmitter<CollegeStudy> = new EventEmitter();\n  @Input() study: CollegeStudy = {} as CollegeStudy;\n  public rForm: FormGroup;\n\n  constructor() {}\n  ngOnInit() {\n    this.loadSelectProperties();\n    this.loadFormInstance();\n  }\n\n  public loadSelectProperties(): void {}\n\n  public loadFormInstance(): void {\n    this.rForm = new FormGroup({\n      institution: new FormControl(this.study.institution, [\n        Validators.required\n      ]),\n      title: new FormControl(this.study.title, [Validators.required]),\n      date: new FormControl(this.study.date, [\n        Validators.required,\n        dateValidator()\n      ]),\n      bilingue: new FormControl(this.study.bilingue, [])\n    });\n  }\n\n  public submit() {\n    this.onSave.emit({ ...this.study, ...this.rForm.value });\n  }\n\n  public save() {\n    const study: CollegeStudy = {\n      certificate: false,\n      ...this.rForm.value\n    };\n    this.onSave.emit(study);\n  }\n}\n","<section style=\"clear:both;padding-bottom:2em;\"></section>\n\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\n    <mat-card>\n    <mat-card-header>\n      <mat-card-title class=\"title_card\">Detalles Formación</mat-card-title>\n    </mat-card-header>\n    <mat-card-content> \n\n<form [formGroup]=\"rForm\" (submit)=\"submit()\">\n\n  <mat-form-field appearance=\"fill\" class=\"sizeField\">\n    <mat-label>Centro educativo</mat-label>\n    <input matInput \n    name=\"institution\"\n    formControlName=\"institution\"\n    placeholder=\"Centro educativo\">\n    <mat-hint align=\"end\">Seleciona centro ^</mat-hint>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\" class=\"sizeField\">\n    <mat-label>Título</mat-label>\n    <input matInput \n    name=\"title\"\n    formControlName=\"title\"\n    placeholder=\"Título\">\n    <mat-hint align=\"end\">Seleciona centro ^</mat-hint>\n  </mat-form-field>\n\n  <mat-form-field class=\"sizeField\">\n    <mat-label>Fecha de obtención del título</mat-label>\n    <input matInput [matDatepicker]=\"date\" name=\"date\" formControlName=\"date\">\n    <mat-datepicker-toggle matSuffix [for]=\"date\" ></mat-datepicker-toggle>\n    <mat-datepicker #date ></mat-datepicker>\n  </mat-form-field>\n\n   <mat-checkbox name=\"bilingue\" formControlName=\"bilingue\" class=\"sizeField\">Bilingüe</mat-checkbox>\n  \n    <div class=\"buttonCenter\">\n    <button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\" [disabled]=\"rForm.invalid\"><mat-icon class=\"icon\"> save</mat-icon>Guardar</button>\n    </div>\n</form>\n\n</mat-card-content> \n</mat-card>\n</div>\n\n<!--  SIN MATERIAL\n\n<form [formGroup]=\"rForm\" (submit)=\"submit()\">\n\n\n <div class=\"form-group\">\n    <label for=\"institution\">Centro educativo</label>\n    <input\n      type=\"text\"\n      class=\"col-sm-10 form-control\"\n      name=\"institution\"\n      formControlName=\"institution\"\n    />\n  </div>\n<div class=\"form-group\">\n    <label for=\"title\">Título</label>\n    <input\n      type=\"text\"\n      class=\"col-sm-10 form-control\"\n      name=\"title\"\n      formControlName=\"title\"\n    />\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"date\">Fecha de obtención del título</label>\n    <input\n      type=\"text\"\n      name=\"date\"\n      class=\"col-sm-10 form-control\"\n      formControlName=\"date\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"bilingue\">Bilingue</label>\n    <input\n      type=\"checkbox\"\n      name=\"bilingue\"\n      class=\"form-check-input\"\n      formControlName=\"bilingue\"\n    />\n  </div>\n\n  <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"rForm.invalid\">\n    Guardar\n  </button>\n</form>\n\n</mat-card-content> \n</mat-card>\n</div>\n\n-->","import { Component, Output, EventEmitter, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { VocationalStudy,Institution,Category,TitleStudy,Grade} from 'src/app/shared/models/study.model';\nimport { MockData } from 'src/app/shared/mock-data';\nimport { dateValidator } from 'src/app/shared/directives/date-validator.directive';\n//Importado para modificar el formato fecha\nimport { MAT_MOMENT_DATE_FORMATS,  MomentDateAdapter,  MAT_MOMENT_DATE_ADAPTER_OPTIONS,} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n@Component({\n  selector: 'app-vocational-form',\n  templateUrl: './vocational-form.component.html',\n  styleUrls: ['./vocational-form.component.scss'],\n  providers: [\n    // The locale would typically be provided on the root module of your application. We do it at\n    // the component level here, due to limitations of our example generation script.\n    {provide: MAT_DATE_LOCALE, useValue: 'es-ES'},\n\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class VocationalFormComponent implements OnInit {\n  @Output() onSave: EventEmitter<VocationalStudy> = new EventEmitter();\n  @Input() study: VocationalStudy = {} as VocationalStudy;\n  public institutions: Institution[];\n  public categories: Category[];\n  public titles: TitleStudy[];\n  public grades: Grade[];\n  public rForm: FormGroup;\n\n  \n\n  constructor() {}\n  ngOnInit() {\n    this.loadSelectProperties();\n    this.loadFormInstance();\n  }\n\n  public loadSelectProperties(): void {\n    this.institutions = MockData.VOCATIONAL_INSTITUTION;\n    this.categories = MockData.VOCATIONAL_CATEGORY;\n    this.titles = MockData.VOCATIONAL_TITLE;\n    this.grades = MockData.VOCATIONAL_GRADES;\n  }\n\n  public loadFormInstance(): void {\n    this.rForm = new FormGroup({\n      institution: new FormControl(this.study.institution, [\n        Validators.required\n      ]),\n      category: new FormControl(this.study.category, [Validators.required]),\n      grade: new FormControl(this.study.grade, [Validators.required]),\n      title: new FormControl(this.study.title, [Validators.required]),\n      date: new FormControl(this.study.date, [\n        Validators.required,\n        dateValidator()\n      ]),\n      dual: new FormControl(this.study.dual, []),\n      bilingue: new FormControl(this.study.bilingue, [])\n    });\n  }\n\n  public submit() {\n    this.onSave.emit({ ...this.study, ...this.rForm.value });\n  }\n\n  public compareInstitution(\n    institution1: Institution,\n    institution2?: Institution\n  ) {\n    return institution1.uid === (institution2 && institution2.uid);\n  }\n  public compareCategory(category1: Category, category2: Category) {\n    return category1.uid === (category2 && category2.uid);\n  }\n  public compareTitle(title1: TitleStudy, title2: TitleStudy) {\n    return title1.uid === (title2 && title2.uid);\n  }\n\n  public compareGrade(grade1: Grade, grade2: Grade) {\n    return grade1.uid === (grade2 && grade2.uid);\n  }\n  public save() {\n    const study: VocationalStudy = {\n      certificate: false,\n      ...this.rForm.value\n    };\n    this.onSave.emit(study);\n  }\n}\n","<section style=\"clear:both;padding-bottom:2em;\"></section>\n\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\n    <mat-card>\n    <mat-card-header>\n      <mat-card-title class=\"title_card\">Detalles Formación</mat-card-title>\n    </mat-card-header>\n    <mat-card-content> \n      \n      <form [formGroup]=\"rForm\" (submit)=\"submit()\">\n\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\n          <mat-label>Centro educativo</mat-label>\n            <mat-select\n              [compareWith]=\"compareInstitution\"\n              name=\"institution\"\n              formControlName=\"institution\">\n              <mat-option [value]=\"institution\" *ngFor=\"let institution of institutions\">\n                {{ institution.name }}</mat-option>\n            </mat-select>\n          <mat-hint align=\"end\">Seleciona centro ^</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\n          <mat-label>Familia profesional</mat-label>\n            <mat-select\n              name=\"category\"\n              formControlName=\"category\"\n              [compareWith]=\"compareCategory\">\n              <mat-option [value]=\"category\" *ngFor=\"let category of categories\">\n                {{ category.name }}</mat-option>\n            </mat-select>\n          <mat-hint align=\"end\">Seleciona familia profesional ^</mat-hint>\n        </mat-form-field>\n             \n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\n          <mat-label>Nivel</mat-label>\n            <mat-select\n            name=\"grade\"\n            formControlName=\"grade\"\n            [compareWith]=\"compareGrade\">\n              <mat-option [value]=\"grade\" *ngFor=\"let grade of grades\">\n                {{ grade.name }}</mat-option>\n            </mat-select>\n          <mat-hint align=\"end\">Seleciona Nivel ^</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" class=\"sizeField\">\n          <mat-label>Título</mat-label>\n            <mat-select\n            name=\"title\"\n            formControlName=\"title\"\n            [compareWith]=\"compareTitle\">\n              <mat-option [value]=\"title\" *ngFor=\"let title of titles\">\n                {{ title.name }}</mat-option>\n            </mat-select>\n          <mat-hint align=\"end\">Seleciona título ^</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field class=\"sizeField\">\n          <mat-label>Fecha de obtención del título</mat-label>\n          <input matInput [matDatepicker]=\"date\" name=\"date\" formControlName=\"date\">\n          <mat-datepicker-toggle matSuffix [for]=\"date\" ></mat-datepicker-toggle>\n          <mat-datepicker #date ></mat-datepicker>\n        </mat-form-field>\n\n<mat-checkbox name=\"bilingue\" formControlName=\"bilingue\" class=\"sizeField\">Bilingüe</mat-checkbox>\n\n<mat-checkbox name=\"dual\" formControlName=\"dual\" class=\"sizeField\">Dual</mat-checkbox>\n<div class=\"buttonCenter\">\n<button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\" [disabled]=\"rForm.invalid\"><mat-icon class=\"icon\"> save</mat-icon>Guardar</button>\n</div>\n<!--<button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"rForm.invalid\"> Guardar</button>-->\n            </form>\n\n            \n    </mat-card-content> \n  </mat-card>\n</div>\n\n\n<!-- SIN MATERIAL\n      <form [formGroup]=\"rForm\" (submit)=\"submit()\">\n              <div class=\"form-group\">\n                <label for=\"institution\">Centro</label>\n                <select\n                  [compareWith]=\"compareInstitution\"\n                  class=\"col-sm-10 form-control\"\n                  name=\"institution\"\n                  formControlName=\"institution\"\n                >\n                  <option [ngValue]=\"institution\" *ngFor=\"let institution of institutions\">\n                    {{ institution.name }}</option\n                  >\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"category\">Familia profesional</label>\n                <select\n                  class=\"col-sm-10 form-control\"\n                  name=\"category\"\n                  formControlName=\"category\"\n                  [compareWith]=\"compareCategory\"\n                >\n                  <option [ngValue]=\"category\" *ngFor=\"let category of categories\">\n                    {{ category.name }}</option\n                  >\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"grade\">Nivel</label>\n                <select\n                  class=\"col-sm-10 form-control\"\n                  name=\"grade\"\n                  formControlName=\"grade\"\n                  [compareWith]=\"compareGrade\"\n                >\n                  <option [ngValue]=\"grade\" *ngFor=\"let grade of grades\">\n                    {{ grade.name }}</option\n                  >\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"title\">Título</label>\n                <select\n                  class=\"col-sm-10 form-control\"\n                  name=\"title\"\n                  formControlName=\"title\"\n                  [compareWith]=\"compareTitle\"\n                >\n                  <option [ngValue]=\"title\" *ngFor=\"let title of titles\">\n                    {{ title.name }}</option\n                  >\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"date\">Fecha de obtención del título</label>\n                <input\n                  type=\"text\"\n                  name=\"date\"\n                  class=\"col-sm-10 form-control\"\n                  formControlName=\"date\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"bilingue\">Bilingue</label>\n                <input\n                  type=\"checkbox\"\n                  name=\"bilingue\"\n                  class=\"form-check-input\"\n                  formControlName=\"bilingue\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"dual\">Dual</label>\n                <input\n                  type=\"checkbox\"\n                  name=\"dual\"\n                  class=\"form-check-input\"\n                  formControlName=\"dual\"\n                />\n              </div>\n              <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"rForm.invalid\">\n                Guardar\n              </button>\n            </form>\n\n-->","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store} from '@ngrx/store';\nimport { AppStore } from 'src/app/shared/models/store.interface';\nimport * as UserSelector from '../../../../shared/state/user/selectors/user.selector';\n@Component({\n  selector: 'app-work-experiencie-smart',\n  template: `<app-work-experiencie\n    [user]=\"users$|async\"></app-work-experiencie>`,\n  \n})\nexport class WorkExperiencieSmartComponent implements OnInit {\n  public users$: Observable<any> = this.store$.select(UserSelector.selectAll);\n  \n  constructor(private store$: Store<AppStore>) { }\n  \n  ngOnInit() {\n  \n  }\n  colorChange(color) {\n    console.log(color);\n    }\n}\n","import { Component, OnInit,Input, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MockData } from 'src/app/shared/mock-data';\r\nimport { Experience} from 'src/app/shared/models/experience.model';\r\nimport { User } from 'src/app/shared/models/user.model';\r\nimport { dateValidator } from 'src/app/shared/directives/date-validator.directive';\r\nimport { Store } from '@ngrx/store';\r\nimport * as UserActions from '../../../../shared/state/user/actions/user.actions';\r\n//Importado para modificar el formato fecha\r\nimport { MAT_MOMENT_DATE_FORMATS,  MomentDateAdapter,  MAT_MOMENT_DATE_ADAPTER_OPTIONS,} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-work-experiencie',\r\n  templateUrl: './work-experiencie.component.html',\r\n  styleUrls: ['./work-experiencie.component.scss'],\r\n  providers: [\r\n    // The locale would typically be provided on the root module of your application. We do it at\r\n    // the component level here, due to limitations of our example generation script.\r\n    {provide: MAT_DATE_LOCALE, useValue: 'es-ES'},\r\n\r\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\r\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\r\n    // here, due to limitations of our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\r\n  ],\r\n})\r\nexport class WorkExperiencieComponent implements OnInit  {\r\n  @Input() user:User;\r\n  \r\n  rForm: FormGroup;\r\n  experiencie: Experience = {} as Experience;\r\n/*  languageLevels: LanguageLevel[];\r\n  languageNames: LanguageName[];*/\r\n  userTemp:User;\r\n  uid:number;\r\n  \r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private store$: Store<User>\r\n  ) {\r\n    this.route.params.subscribe(params => {\r\n      this.uid = +params.uid;\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  //Dependiendo del Id pasado por parámetro hará un nuevo lenguaje o actualizará\r\n    this.experiencie = (this.user.experiencies.find(experiencie => experiencie.uid === this.uid) || {}) as Experience;\r\n  //  this.loadSelectProperties();\r\n    this.loadFormInstance();\r\n    \r\n  }\r\n/*  public loadSelectProperties(): void {\r\n    this.languageLevels = MockData.LANGUAGES_LEVEL;\r\n    this.languageNames = MockData.LANGUAGES_NAME;\r\n  }*/\r\n\r\n  public loadFormInstance(): void {\r\n    this.rForm = new FormGroup({\r\n      empresa: new FormControl(this.experiencie.empresa, [Validators.required]),\r\n      date_incio: new FormControl(this.experiencie.date_incio, []),\r\n      date_fin: new FormControl(this.experiencie.date_fin, []),\r\n      puesto: new FormControl(this.experiencie.puesto, []),\r\n      tareas: new FormControl(this.experiencie.tareas, []),\r\n    });\r\n  }\r\n  public submit() {\r\n    this.saveOrUpdate({ ...this.experiencie, ...this.rForm.value });\r\n  }\r\n\r\n  compareLevel(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n  compareName(option1, option2) {\r\n    return option1.uid === (option2 && option2.uid);\r\n  }\r\n  private update(experience: Experience) {\r\n       const experiencies = this.user.experiencies.map(_experiencie =>\r\n      _experiencie.uid === experience.uid ? experience : _experiencie\r\n    );\r\n    console.log(experience);\r\n    const user = {...this.user,experiencies};\r\n    console.log(user);\r\n    this.store$.dispatch(new UserActions.Update(user));\r\n\r\n  }\r\n  private save(experience: Experience) {\r\n      const _experiencie = MockData.fakeIncreaseID<Experience>(\r\n      this.user.experiencies,\r\n      experience\r\n    );\r\n    const experiencies = [...this.user.experiencies,_experiencie];\r\n    const user = {...this.user,experiencies};\r\n    this.store$.dispatch(new UserActions.Update(user));\r\n  }\r\n\r\n  saveOrUpdate(experience: Experience) {\r\n    //Aquí lanza una función de nuevo o update dependiendo de si el uid existe en el array language.\r\n    this.isNew() ? this.save(experience) : this.update(experience);\r\n  }\r\n  public isNew(): boolean {\r\n    return !!!this.experiencie.uid;\r\n  }\r\n}\r\n","<div *ngIf=\"user\">\r\n\r\n  <section style=\"clear:both;padding-bottom:2em;\"></section>\r\n\r\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\r\n    <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title class=\"title_card\">Añadir/Editar Experiencia</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content> \r\n\r\n        <form [formGroup]=\"rForm\" (submit)=\"submit()\">\r\n          \r\n          <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n            <mat-label>Empresa</mat-label>\r\n            <input matInput \r\n            name=\"empresa\"\r\n            formControlName=\"empresa\">\r\n            <mat-hint align=\"end\">Indica empresa^</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"sizeField\">\r\n            <input matInput [matDatepicker]=\"picker1\" formControlName=\"date_incio\" placeholder=\"Fecha de Inicio\" >\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\" ></mat-datepicker-toggle>\r\n            <mat-datepicker #picker1 ></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"sizeField\">\r\n            <input matInput [matDatepicker]=\"picker2\" formControlName=\"date_fin\" placeholder=\"Fecha Fin\" >\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\" ></mat-datepicker-toggle>\r\n            <mat-datepicker #picker2 ></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n            <mat-label>Puesto</mat-label>\r\n            <input matInput \r\n            name=\"puesto\"\r\n            formControlName=\"puesto\">\r\n            <mat-hint align=\"end\">Indica puesto^</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"fill\" class=\"sizeField\">\r\n            <mat-label>Tareas</mat-label>\r\n            <input matInput \r\n            name=\"tareas\"\r\n            formControlName=\"tareas\">\r\n            <mat-hint align=\"end\">Indica tareas^</mat-hint>\r\n          </mat-form-field>\r\n\r\n          <div class=\"buttonCenter\">\r\n            <button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\" [disabled]=\"rForm.invalid\"><mat-icon class=\"icon\"> save</mat-icon>Guardar</button>\r\n          </div>\r\n          \r\n        </form>\r\n    </mat-card-content> \r\n  </mat-card>\r\n  </div>\r\n</div>\r\n<!-- SIN MATERIAL\r\n  <div *ngIf=\"user\">\r\n<form [formGroup]=\"rForm\" (submit)=\"submit()\"></form>\r\n <div class=\"form-group\">\r\n            <label for=\"empresa\">Empresa</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"empresa\"\r\n              class=\"col-sm-10 form-control\"\r\n              formControlName=\"empresa\"\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"date_incio\">Fecha de Inicio</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"date_incio\"\r\n              class=\"col-sm-10 form-control\"\r\n              formControlName=\"date_incio\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"date_fin\">Fecha Fin</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"date_fin\"\r\n              class=\"col-sm-10 form-control\"\r\n              formControlName=\"date_fin\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"puesto\">Puesto</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"puesto\"\r\n              class=\"col-sm-10 form-control\"\r\n              formControlName=\"puesto\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"tareas\">Tareas</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"tareas\"\r\n              class=\"col-sm-10 form-control\"\r\n              formControlName=\"tareas\"\r\n            />\r\n          </div>\r\n          \r\n//Comentado        \r\n          <div class=\"form-group\">\r\n            <label for=\"level\">Nivel</label>\r\n            <select\r\n              [compareWith]=\"compareLevel\"\r\n              class=\"col-sm-10 form-control\"\r\n              name=\"level\"\r\n              formControlName=\"level\"\r\n            >\r\n              <option [ngValue]=\"level\" *ngFor=\"let level of languageLevels\">\r\n                {{ level.name }}</option\r\n              >\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Idioma</label>\r\n            <select\r\n              class=\"col-sm-10 form-control\"\r\n              name=\"name\"\r\n              formControlName=\"name\"\r\n              [compareWith]=\"compareName\"\r\n            >\r\n              <option [ngValue]=\"name\" *ngFor=\"let name of languageNames\">\r\n                {{ name.name }}</option\r\n              >\r\n            </select>\r\n          </div>\r\n//descomentador         \r\n\r\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"rForm.invalid\">\r\n          Guardar\r\n        </button>\r\n      </form>\r\n    </div>\r\n-->\r\n","import { Component, OnInit,ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AppStore } from 'src/app/shared/models/store.interface';\nimport * as UserSelector from '../../shared/state/user/selectors/user.selector';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProfileComponent implements OnInit {\n  public users$: Observable<any> = this.store$.select(UserSelector.selectAll);\n  \n  constructor(private store$: Store<AppStore>) { }\n  \n  ngOnInit() {\n  \n  }\n\n}\n","<!--<h2>\n  Profile\n</h2>-->\n<!-- <div *ngIf=\"userRol === 'student'\"> -->\n<app-profile-student  [user]=\"users$|async\" > </app-profile-student>\n<!-- </div> -->\n\n<!-- <div *ngIf=\"userRol === 'company'\">\n\t<app-profile-company> </app-profile-company>\n\t\n</div> -->\n","import { NgModule } from '@angular/core';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { ProfileComponent } from './profile.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ProfileStudentComponent } from './profile-student/profile-student.component';\nimport { ProfileStudyComponent } from './profile-student/study/profile-study.component';\nimport { ProfileStudySmartComponent } from './profile-student/study/profile-study-smart.component';\nimport { VocationalFormComponent } from './profile-student/study/vocational-form/vocational-form.component';\nimport { UniversityDegreeComponent } from './profile-student/study/university-degree-form/university-degree-form.component';\nimport { ProfileLanguageComponent } from './profile-student/language/profile-language.component';\nimport { ProfileLanguageSmartComponent }from './profile-student/language/profile-language-smart.component';\nimport { ProfileAccountComponent } from './profile-student/account/profile-account.component';\nimport { ProfileAccountSmartComponent } from './profile-student/account/profile-account-smart.component';\nimport { WorkExperiencieComponent } from './profile-student/work-experience/work-experiencie.component';\nimport { WorkExperiencieSmartComponent } from './profile-student/work-experience/work-experiencie-smart.component';\nimport { MaterialModule } from '../../material-module';\n\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n    ProfileStudentComponent,\n    \n    ProfileStudyComponent,\n    ProfileStudySmartComponent,\n    VocationalFormComponent,\n    UniversityDegreeComponent,\n    ProfileLanguageComponent,\n    ProfileLanguageSmartComponent,\n    ProfileAccountComponent,\n    ProfileAccountSmartComponent,\n    WorkExperiencieComponent,\n    WorkExperiencieSmartComponent,\n  \n  ],\n  imports: [SharedModule, ProfileRoutingModule,MaterialModule]\n})\nexport class ProfileModule {}\n"],"sourceRoot":"webpack:///"}