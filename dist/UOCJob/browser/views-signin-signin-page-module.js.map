{"version":3,"sources":["./src/app/views/signin/signin-page.component.ts","./src/app/views/signin/signin-page.module.ts","./src/app/views/signin/signin-routing.module.ts","./src/app/views/signin/signin.component.ts","./src/app/views/signin/signin.component.html"],"names":[],"mappings":"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","file":"views-signin-signin-page-module.js","sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as UserActions from '../../shared/state/user/actions/user.actions';\nimport { Credentials} from '../../shared/models/user.model';\nimport { Observable } from 'rxjs';\nimport * as UserSelector from '../../shared/state/user/selectors/user.selector';\nimport { AppStore } from 'src/app/shared/models/store.interface';\n\n@Component({\n  selector: 'login-page',\n  template: `\n   <app-signin        \n   [state]=\"states$|async\"   \n   (login)=\"onLogin($event)\">`\n    ,\n /* styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush*/\n})\nexport class SigninPageComponent implements OnInit {\n\n  public states$: Observable<any> = this.store$.select(UserSelector.select);\n\n  constructor(private store$: Store<AppStore>) {}\n  \n  ngOnInit() {\n  }\n\n  onLogin(credentials:Credentials) {\n  this.store$.dispatch(new UserActions.Login(credentials));\n  }\n\n\n\n  \n}","import { NgModule } from '@angular/core';\n\nimport { SigninRoutingModule } from './signin-routing.module';\nimport { SigninPageComponent } from './signin-page.component';\nimport { SigninComponent } from './signin.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MaterialModule } from '../../material-module'\n\n@NgModule({\n  declarations: [SigninPageComponent,SigninComponent],\n  imports: [SharedModule, SigninRoutingModule,MaterialModule  ],\n  providers: []\n})\nexport class SigninPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SigninPageComponent } from './signin-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SigninPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SigninRoutingModule {}\n","import { Component, OnInit, EventEmitter, Output, Input} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n  \n  loginForm: FormGroup;\n  submitted = false;\n  errorLogin = false;\n  @Input() state:any;\n  @Output() login = new EventEmitter<any>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.login.emit(this.loginForm.value);\n  }\n  getErrorMessageEmail() {\n  if (this.loginForm.value.email==\"\") {\n        return 'You must enter a value';\n      }\n        return 'Not a valid email';\n    }\n    getErrorMessagePassword() {\n      if (this.loginForm.value.password==\"\") {\n            return 'You must enter a value';\n          }\n        return \"You must enter a value\";\n      }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-6 offset-sm-3\">\n      <img src=\"/assets/img/uoc_logo.png\" />\n    </div>\n  </div>\n</div>\n<div fxLayout=\"column\" fxFlexFill fxLayoutAlign=\"center center\" style=\"background-image:url('../../assets/img/login.jpg');\nheight: 100%;\nbackground-repeat: no-repeat;\nbackground-position: center;\nbackground-size: cover; \">\n  <div fxLayout=\"column\" class=\"container_form\">\n    <div class=\" mat-elevation-z4\">\n      <mat-card >\n          <mat-card-title class=\"title\">\n          Login\n          </mat-card-title> \n          <mat-card-content>\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n            <div *ngIf=\"state.user.errorUser\" class=\"alert alert-danger\">\n              <button type=\"button\" class=\"close\" data-dismiss=\"alert\">\n                &times;\n              </button>\n\n              Los credenciales son incorrectos o el usuario no existe.\n            </div>\n            \n            <div class=\"form-group\">\n            <!-- <label for=\"email\">Email</label>-->\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n            <mat-label>Email *</mat-label>\n              <input matInput\n                type=\"text\"\n                id=\"email\"\n                formControlName=\"email\"\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid': submitted && loginForm.controls.email.errors\n                }\"\n              />\n              <mat-error *ngIf=\"loginForm.controls.email.invalid\">{{getErrorMessageEmail()}}</mat-error>\n              <mat-hint>example@gmail.com</mat-hint>\n            </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n            <!--   <label for=\"password\">Password</label>-->\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n              <mat-label>Password*</mat-label>\n              <input matInput\n                type=\"password\"\n                id=\"password\"\n                formControlName=\"password\"\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid': submitted && loginForm.controls.password.errors\n                }\"\n              />\n              <mat-error *ngIf=\"loginForm.controls.password.invalid\">{{getErrorMessagePassword()}}</mat-error>\n              <mat-hint>enter password is required</mat-hint>\n            </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n              <button [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\">\n                Login\n              </button>\n              <a routerLink=\"/forgot-password\" class=\"btn btn-link\"\n                >Remember password</a\n              >\n            </div>\n          </form>\n          \n        </mat-card-content>        \n      </mat-card>\n    </div>\n  </div>\n</div>\n\n"],"sourceRoot":"webpack:///"}