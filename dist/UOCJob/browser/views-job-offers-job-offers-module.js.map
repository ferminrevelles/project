{"version":3,"sources":["./src/app/views/job-offers/job-offers-list/job-offers-list.component.ts","./src/app/views/job-offers/job-offers-list/job-offers-list.component.html","./src/app/views/job-offers/job-offers-routing.module.ts","./src/app/views/job-offers/job-offers.component.ts","./src/app/views/job-offers/job-offers.component.html","./src/app/views/job-offers/job-offers.module.ts"],"names":[],"mappings":"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","file":"views-job-offers-job-offers-module.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { VocationalStudy,Institution,Category,TitleStudy,Grade} from 'src/app/shared/models/study.model';\nimport { MockData } from 'src/app/shared/mock-data';\n//Importado para modificar el formato fecha\nimport { MAT_MOMENT_DATE_FORMATS,  MomentDateAdapter,  MAT_MOMENT_DATE_ADAPTER_OPTIONS,} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\nimport { Municipe, Province} from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-job-offers-list',\n  templateUrl: './job-offers-list.component.html',\n  styleUrls: ['./job-offers-list.component.scss'],\n  providers: [\n    // The locale would typically be provided on the root module of your application. We do it at\n    // the component level here, due to limitations of our example generation script.\n    {provide: MAT_DATE_LOCALE, useValue: 'es-ES'},\n\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class JobOffersListComponent implements OnInit {\n//  @Input() user:User;\n  @Input() offers: Offer[]=[];\n  offersStudy: Offer[] = [];\n  offersOther: Offer[] = [];\n  displayedColumnsOffers: string[] = ['puesto','empresa','familia','fecha','provincia','municipio'];\n  rForm: FormGroup;\n  public categories: Category[];\n  municipes: Municipe[];\n  provinces: Province[];\n  \n  constructor() { }\n\n  ngOnInit() {\n   this.categories = MockData.VOCATIONAL_CATEGORY;\n   this.municipes = MockData.MUNICIPES;\n   this.provinces = MockData.PROVINCES;\n   this.loadForm();\n  }\n  public loadForm(): void {\n    this.rForm = new FormGroup({\n      puesto: new FormControl('', [Validators.required]),\n      empresa: new FormControl('', [Validators.required]),\n      category: new FormControl('', [Validators.required]),\n      date_incio: new FormControl('', [Validators.required]),\n      province: new FormControl('', [Validators.required]),\n      municipe: new FormControl('', [Validators.required]),\n    });\n  }\n  submit(){\n    console.log(\"AÃ±adir oferta al sistema\");\n    console.log(this.rForm.value);\n  }\n}\n","\n  <div *ngIf=\"offers\">\n    <section style=\"clear:both;padding-bottom:2em;\"></section>\n    \n  \n   <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\n      <mat-card>\n       \n      <mat-card-header >\n        <mat-card-title class=\"title_card\">Total de ofertas</mat-card-title>\n      </mat-card-header>\n\n          <mat-card-content>\n\n            <table mat-table [dataSource]=\"offers\" class=\"mat-elevation-z8\">\n\n              <ng-container matColumnDef=\"puesto\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Puesto </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.company.name}} </td>\n              </ng-container>    \n\n              <ng-container matColumnDef=\"empresa\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Empresa </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.company.name}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"familia\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Familia </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.category.name}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"fecha\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Fecha </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.date |date:'d/M/yyyy'}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"provincia\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Provincia </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.province.name}} </td>\n              </ng-container>  \n\n              <ng-container matColumnDef=\"municipio\" >\n                <th mat-header-cell *matHeaderCellDef class=\"columnSeparation\"> Municipio </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"columnSeparation\"> {{element.municipe.name}} </td>\n              </ng-container>  \n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsOffers\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsOffers;\"></tr>\n          </table>\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n          </mat-card-content>\n      </mat-card>\n  </div>\n</div>\n\n<section style=\"clear:both;padding-bottom:2em;\"></section>\n\n  <div fxLayoutAlign=\"space-around stretch\" fxLayoutWrap >\n    <mat-card>\n    <mat-card-header>\n      <mat-card-title class=\"title_card\">AÃ±adir oferta trabajo</mat-card-title>\n    </mat-card-header>\n    <mat-card-content> \n\n        <form [formGroup]=\"rForm\" (submit)=\"submit()\">\n          \n          <mat-form-field appearance=\"fill\" class=\"sizeField\">\n            <mat-label>Puesto</mat-label>\n            <input matInput \n            name=\"puesto\"\n            formControlName=\"puesto\">\n            <mat-hint align=\"end\">Indica puesto^</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"fill\" class=\"sizeField\">\n            <mat-label>Empresa</mat-label>\n            <input matInput \n            name=\"empresa\"\n            formControlName=\"empresa\">\n            <mat-hint align=\"end\">Indica empresa^</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"fill\" class=\"sizeField\">\n            <mat-label>Familia profesional</mat-label>\n              <mat-select\n                name=\"category\"\n                formControlName=\"category\">\n                <mat-option [value]=\"category\" *ngFor=\"let category of categories\">\n                  {{ category.name }}</mat-option>\n              </mat-select>\n            <mat-hint align=\"end\">Seleciona familia profesional ^</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field class=\"sizeField\">\n            <input matInput [matDatepicker]=\"picker1\" formControlName=\"date_incio\" placeholder=\"Fecha de Inicio\" >\n            <mat-datepicker-toggle matSuffix [for]=\"picker1\" ></mat-datepicker-toggle>\n            <mat-datepicker #picker1 ></mat-datepicker>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"fill\" class=\"sizeField\">\n            <mat-label>Provincia</mat-label>\n              <mat-select\n              name=\"province\"\n              formControlName=\"province\">\n                <mat-option [value]=\"province\" *ngFor=\"let province of provinces\">\n                  {{ province.name }}</mat-option>\n              </mat-select>\n            <mat-hint align=\"end\">Seleciona provincia ^</mat-hint>\n          </mat-form-field>\n  \n          <mat-form-field appearance=\"fill\" class=\"sizeField\">\n            <mat-label>Municipio</mat-label>\n              <mat-select\n              name=\"municipe\"\n              formControlName=\"municipe\">\n                <mat-option [value]=\"municipe\" *ngFor=\"let municipe of municipes\">\n                  {{ municipe.name }}</mat-option>\n              </mat-select>\n            <mat-hint align=\"end\">Seleciona municipio ^</mat-hint>\n          </mat-form-field>\n\n          <div class=\"buttonCenter\">\n            <button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\" [disabled]=\"rForm.invalid\"><mat-icon class=\"icon\"> save</mat-icon>Guardar</button>\n          </div>\n          \n        </form>\n    </mat-card-content> \n  </mat-card>\n  </div>\n  <section style=\"clear:both;padding-bottom:2em;\"></section>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { JobOffersComponent } from './job-offers.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobOffersComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class JobOffersRoutingModule {}","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from  '@ngrx/store';\nimport { AppStore } from 'src/app/shared/models/store.interface';\nimport * as OfferSelector from '../../shared/state/offers/selectors/offers.selector';\n@Component({\n  selector: 'app-job-offers',\n  templateUrl: './job-offers.component.html',\n  styleUrls: ['./job-offers.component.scss']\n})\nexport class JobOffersComponent implements OnInit {\n  public offers$: Observable <any> = this.store$.select(OfferSelector.selectOffer);  \n  constructor(private store$: Store<AppStore>) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<app-job-offers-list [offers]=\"offers$|async\"></app-job-offers-list>","import { NgModule } from '@angular/core';\n\nimport { JobOffersRoutingModule } from './job-offers-routing.module';\nimport { JobOffersListComponent } from './job-offers-list/job-offers-list.component';\nimport { JobOffersComponent } from './job-offers.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MaterialModule } from '../../material-module'\n\n@NgModule({\n  declarations: [JobOffersComponent,JobOffersListComponent ],\n  imports: [SharedModule, JobOffersRoutingModule,MaterialModule  ],\n  providers: []\n})\nexport class JobOffersModule {}"],"sourceRoot":"webpack:///"}