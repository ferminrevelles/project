{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core.module.ts","./src/app/material-module.ts","./src/app/shared/app.settings.ts","./src/app/shared/components/admin-layout/admin-layout.component.ts","./src/app/shared/components/admin-layout/admin-layout.template.html","./src/app/shared/inmemory-db/fake-backend.service.ts","./src/app/shared/services/app-confirm/app-confirm.component.ts","./src/app/shared/services/app-confirm/app-confirm.service.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/config.service.ts","./src/app/shared/services/offers.service.ts","./src/app/shared/services/profile.service.ts","./src/app/shared/services/user.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/state/offers/actions/offers.actions.ts","./src/app/shared/state/offers/effects/offers.effects.ts","./src/app/shared/state/offers/reducers/offers.reducer.ts","./src/app/shared/state/root.reducer.ts","./src/app/shared/state/user/actions/user.actions.ts","./src/app/shared/state/user/effects/user.effects.ts","./src/app/shared/state/user/reducers/user.reducer.ts","./src/app/shared/widgets/line/line.component.ts","./src/app/shared/widgets/line/line.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AdminLayoutComponent } from './shared/components/admin-layout/admin-layout.component';\nimport { Routes } from '@angular/router';\n/*import { AuthLayoutComponent } from './shared/components/layouts/auth-layout/auth-layout.component';\nimport { AuthGuard } from './shared/services/auth/auth.guard'; */\n\nexport const rootRouterConfig: Routes = [\n  {\n    path: '',\n    redirectTo: 'signin',\n    pathMatch: 'full'\n  },\n  {\n    path: 'signin',\n    loadChildren: () =>\n      import('./views/signin/signin-page.module').then(m => m.SigninPageModule),\n    data: { title: 'Signin' }\n  },\n  {\n    path: 'forgot-password',\n    loadChildren: () =>\n      import('./views/forgot-password/forgot-password.module').then(\n        m => m.ForgotPasswordModule\n      ),\n    data: { title: 'Forgot Password' }\n  },\n  {\n    path: 'signup',\n    loadChildren: () =>\n      import('./views/signup/signup.module').then(m => m.SignupModule),\n    data: { title: 'Signup' }\n  },\n  {\n    path: 'admin',\n    component: AdminLayoutComponent,\n    /* canActivate: [AuthGuard], */\n    children: [\n      {\n        path: 'dashboard',\n        loadChildren: () =>\n          import('./views/dashboard/dashboard.module').then(m => m.DashboardModule),\n        \n\n        data: { title: 'Dashboard', breadcrumb: 'DASHBOARD' }\n      },\n      \n      {\n        path: 'profile',\n        loadChildren: () =>\n          import('./views/profile/profile.module').then(m => m.ProfileModule),\n        data: { title: 'Profile', breadcrumb: 'PROFILE' }\n      },\n      {\n        path: 'favorites',\n        loadChildren: () =>\n          import('./views/favorites/favorites.module').then(\n            m => m.FavoritesModule\n          ),\n\n        data: { title: 'Favorites', breadcrumb: 'FAVORITES' }\n      },\n      {\n        path: 'offers',\n        loadChildren: () =>\n          import('./views/offers/offers.module').then(m => m.OffersModule),\n        data: { title: 'Offers', breadcrumb: 'Offers' }\n      },\n      {\n        path: 'job-offers',\n        loadChildren: () =>\n          import('./views/job-offers/job-offers.module').then(m => m.JobOffersModule),\n        data: { title: 'Offers', breadcrumb: 'Offers' }\n      },\n      {\n        path: 'config',\n        loadChildren: () =>\n          import('./views/config/config-dummy.module').then(m => m.ConfigDummyModule),\n        data: { title: 'Offers', breadcrumb: 'Offers' }\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'sessions/404'\n  }\n];\n","import { Component,OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { SwUpdate } from '@angular/service-worker';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'UOCJob';\n\n  constructor(private swUpadte:SwUpdate) { }\n  \n  ngOnInit() {\n    if (this.swUpadte.isEnabled){\n      this.swUpadte.available.subscribe( ()=>{\n        if (confirm(\"Nueva versión disponible. ¿Descargar nueva versión?\")){\n          window.location.reload();\n        }\n      })\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { AppComponent } from './app.component';\nimport { CoreModule } from './core.module';\nimport { FakeBackendService } from './shared/inmemory-db/fake-backend.service';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from './shared/shared.module';\nimport { rootRouterConfig } from './app-routing';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CommonModule } from '@angular/common';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { PathLocationStrategy, LocationStrategy } from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    MatSnackBarModule,\n    MatDatepickerModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(FakeBackendService, {\n      dataEncapsulation: false\n    }),\n    RouterModule.forRoot(rootRouterConfig, { useHash: false, initialNavigation: 'enabled' }),\n    CoreModule,\n    CommonModule,\n    NgbModule,\n    SharedModule,\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n  ],\n  entryComponents: [AppComponent],\n  declarations: [AppComponent],\n  providers: [{provide: LocationStrategy, useClass: PathLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n","import { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { UserEffects } from './shared/state/user/effects/user.effects';\nimport { OfferEffects } from './shared/state/offers/effects/offers.effects';\nimport { AuthService } from './shared/services/auth.service';\nimport { StoreModule } from '@ngrx/store';\nimport {  reducers,metaReducers  } from './shared/state/root.reducer';\nimport { ProfileService } from './shared/services/profile.service';\nimport { OffersService } from './shared/services/offers.service';\nimport \"@angular/compiler\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { ConfigService } from './shared/services/config.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    \n    StoreModule.forRoot(reducers ),\n    EffectsModule.forRoot([UserEffects,OfferEffects]),\n    BrowserAnimationsModule,\n    StoreModule.forRoot(reducers,{\n      metaReducers,\n      runtimeChecks:{\n        strictStateImmutability:true,\n        strictActionImmutability:true,\n      }\n    }),\n    StoreRouterConnectingModule.forRoot({stateKey:'router'})\n    \n  ],\n  providers: [AuthService,ProfileService,OffersService,ConfigService ],\n  exports: []\n})\nexport class CoreModule {}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}","/* import * as moment from 'moment'; */\nexport class AppSettings {\n  public static readonly APP_NAME = 'PoliJob';\n  public static readonly APP_LOCALSTORAGE_TOKEN = 'PoliJob_Token';\n  public static readonly APP_VERSION = '0.1.0';\n  public static readonly API_ENDPOINT = 'api/';\n  public static readonly STATIC_ENDPOINT = AppSettings.API_ENDPOINT + 'static/';\n  public static readonly STATIC_AVATAR_ENDPOINT =\n    AppSettings.STATIC_ENDPOINT + 'images/avatar/';\n  public static readonly API_ENDPOINT_APP = AppSettings.API_ENDPOINT + 'app/';\n  public static readonly API_ENDPOINT_USER = AppSettings.API_ENDPOINT + 'user';\n  public static readonly API_ENDPOINT_USERS =\n    AppSettings.API_ENDPOINT + 'users';\n  public static readonly API_ENDPOINT_OFFERS =\n    AppSettings.API_ENDPOINT + 'offers';\n  public static readonly API_ENDPOINT_USER_ME =\n    AppSettings.API_ENDPOINT + 'user-me';\n  public static readonly API_ENDPOINT_USER_CREATE =\n    AppSettings.API_ENDPOINT_USER + '/create';\n  public static readonly API_ENDPOINT_CONFIRM_USER =\n    AppSettings.API_ENDPOINT_USER + '/confirm-user';\n  public static readonly API_ENDPOINT_USER_REMEMBER_PASSWORD =\n    AppSettings.API_ENDPOINT_USER + '/remember-password';\n  public static readonly API_ENDPOINT_USER_REQUEST_REMEMBER_PASSWORD =\n    AppSettings.API_ENDPOINT_USER + '/request-remember-password';\n  public static readonly API_ENDPOINT_USER_REQUEST_USER_AVATAR =\n    AppSettings.API_ENDPOINT_USER + '/request-avatar-user';\n\n  public static readonly API_ENDPOINT_USER_UPLOAD_AVATAR =\n    AppSettings.API_ENDPOINT_USER + '/upload-avatar';\n  public static readonly API_ENDPOINT_USER_SENDMAIL =\n    AppSettings.API_ENDPOINT_USER + '/sendmail';\n  public static readonly API_ENDPOINT_AUTH = AppSettings.API_ENDPOINT + 'auth/';\n  public static readonly API_ENDPOINT_AUTH_LOCAL =\n    AppSettings.API_ENDPOINT + 'auth/local/';\n\n  public static readonly APP_QUILL_EDITOR_CONFIGURATION = {\n    toolbar: [\n      ['bold', 'italic', 'underline'],\n      [{ list: 'ordered' }, { list: 'bullet' }],\n      [{ direction: 'rtl' }],\n      ['clean'],\n      ['link']\n    ]\n  };\n\n  public static readonly APP_DEFAULT_MOMENT_LOCALE = 'es';\n  public static readonly GUESS_ROL = {\n    value: 'guess',\n    text: 'settings.rol.GUESS'\n  };\n  public static readonly STUDENT_ROL = {\n    value: 'student',\n    text: 'settings.rol.STUDENT'\n  };\n  public static readonly ADMINISTRATOR_ROL = {\n    value: 'admin',\n    text: 'settings.rol.ADMINISTRATOR'\n  };\n  public static readonly COMPANY_ROL = {\n    value: 'company',\n    text: 'settings.rol.COMPANY'\n  };\n  public static readonly ROLES = [\n    AppSettings.GUESS_ROL,\n    AppSettings.STUDENT_ROL,\n    AppSettings.COMPANY_ROL,\n    AppSettings.ADMINISTRATOR_ROL\n  ];\n\n  public static readonly USER_STATUS_PENDING = {\n    value: 'pending',\n    text: 'settings.status.PENDING'\n  };\n  public static readonly USER_STATUS_ACTIVE = {\n    value: 'active',\n    text: 'settings.status.ACTIVE'\n  };\n  public static readonly USER_STATUS_INACTIVE = {\n    value: 'inactive',\n    text: 'settings.status.INACTIVE'\n  };\n  public static readonly USER_STATUS = [\n    AppSettings.USER_STATUS_PENDING,\n    AppSettings.USER_STATUS_ACTIVE,\n    AppSettings.USER_STATUS_INACTIVE\n  ];\n  public static readonly FORMAT_DATE = 'MM/DD/YYYY';\n\n  public static readonly IMAGES = {\n    UNKNOWN_IMAGE: 'assets/images/image-not-found.png',\n    UNKNOWN_FACE: 'assets/images/face-unknown.png',\n    UNKNOWN_TEAM: 'assets/images/image-not-found.png'\n  };\n\n  public static readonly NOTIFICATIONS = {\n    DEFAULT_TIME: 2000\n  };\n\n  public static getAvatar(\n    user: { uid: string; avatar_hash: string },\n    size: string = 'sm'\n  ): string {\n    if (!user || !user.avatar_hash) {\n      return this.IMAGES.UNKNOWN_FACE;\n    }\n    const [hash, extension] = user.avatar_hash.split('.');\n    return `${this.STATIC_AVATAR_ENDPOINT}${user.uid}/${hash}${size}.${extension}`;\n  }\n  /*  public static getDateFormatted(date: moment.Moment | string) {\n    let dateFormatted = date;\n    if (typeof date === 'string') {\n      dateFormatted = moment(date, 'X');\n    }\n    return (dateFormatted as moment.Moment).format(this.FORMAT_DATE);\n  } */\n}\n","import { Component,OnInit,ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ProfileService } from '../../services/profile.service';\nimport { SigninService } from 'src/app/signin.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AppSettings } from '../../app.settings';\nimport { OffersService } from '../../services/offers.service';\nimport { ConfigService } from '../../services/config.service';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.template.html',\n  styleUrls: ['./admin-layout.component.scss'],\n  \n})\nexport class AdminLayoutComponent implements OnInit {\n \n  colorFondo:string;\n  constructor(private configService:ConfigService, private cd : ChangeDetectorRef) {  }\n\n  ngOnInit(){\n    \n   }\n\n\n}\n","<!-- <div class=\"app-admin-wrap\" [dir]=\"layoutConf.dir\"> -->\n<!-- Header for top navigation layout -->\n<!-- ONLY REQUIRED FOR **TOP** NAVIGATION LAYOUT -->\n<!--   <app-header-top\n    *ngIf=\"layoutConf.navigationPos === 'top'\"\n    [notificPanel]=\"notificationPanel\"\n  >\n  </app-header-top> -->\n\n<mat-nav-list id=\"body\" class=\"color\">\n\n\n<div class=\"row\" >\n  <div class=\"col-3\"  >\n\n  <h1 matSubheader class=\"titleList\">Paginas</h1>\n  <a mat-list-item id=\"row1\" class=\"color\"  routerLinkActive=\"list-item-active\" routerLink=\"/\">\n    <mat-icon> logout</mat-icon>\n    Logout</a>\n  <a mat-list-item  id=\"row2\"  routerLinkActive=\"list-item-active\" routerLink=\"/admin/dashboard\">\n    <mat-icon> view_list</mat-icon>\n    Dashboard</a>\n  <a mat-list-item  id=\"row3\" routerLinkActive=\"list-item-active\" routerLink=\"/admin/profile\">\n    <mat-icon> perm_identity</mat-icon>\n    Profile</a>\n  <a mat-list-item  id=\"row4\"   routerLinkActive=\"list-item-active\" routerLink=\"/admin/offers\">\n    <mat-icon> search</mat-icon>\n    Offers</a>\n  <a mat-list-item id=\"row5\" routerLinkActive=\"list-item-active\" routerLink=\"/admin/offers/my-offers\">\n    <mat-icon> create</mat-icon>\n    My Offers</a>\n  <a mat-list-item  id=\"row6\"   routerLinkActive=\"list-item-active\" routerLink=\"/admin/job-offers\">\n    <mat-icon> local_offer</mat-icon>\n    Job Offers(Company)</a>\n  <a mat-list-item id=\"row7\"   routerLinkActive=\"list-item-active\" routerLink=\"/admin/config\">\n    <mat-icon> settings</mat-icon>\n    Setting</a>\n<!--\n    <ul>\n      <li class=\"mdl-list__item\">\n        <button class=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect button--colored-light-blue\" disabled>\n          <i class=\"material-icons\">create</i>\n          CREATE\n        </button>\n      </li>\n      <li><button mat-raised-button color=\"primary\">Primary</button></li>\n      <li><a routerLink=\"/\">Logout</a></li>\n      <li><a routerLink=\"/admin/dashboard\">Dashboard</a></li>\n\n      <li><a routerLink=\"/admin/profile\">Profile</a></li>\n      <li><a routerLink=\"/admin/offers\">Offers</a></li>\n      <li>\n        <a routerLink=\"/admin/config\">Configuración</a>\n      </li>\n      <li>\n        <a [routerLink]=\"['/admin/offers/my-offers']\">Mis ofertas</a>\n      </li>\n    </ul>\n    <section>\n      <div class=\"example-label\">Raised</div>\n      <div class=\"example-button-row\">\n        <button mat-raised-button>Basic</button>\n        <button mat-raised-button color=\"primary\">Primary</button>\n        <button mat-raised-button color=\"accent\">Accent</button>\n        <button mat-raised-button color=\"warn\">Warn</button>\n        <button mat-raised-button disabled>Disabled</button>\n        <a mat-raised-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n      </div>\n    </section>\n  -->\n    \n  </div>\n  <div class=\"col-9\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n</mat-nav-list>\n<!-- </div> -->\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { User } from '../models/user.model';\n\nexport class FakeBackendService implements InMemoryDbService {\n  createDb() {\n    const users: User[] = [\n      {\n        id: 1,\n        username: 'carloscg',\n        name: 'Carlos',\n        surname: 'Caballero',\n        //Tue Apr 07 2020 00:00:00 GMT+0200 (hora de verano de Europa central)\n        //birthdate: '19/11/1984',\n        birthdate: new  Date('Sun Nov 18 1984 00:00:00 GMT+0100 (hora estándar de Europa central)'),\n        phone: '644039911',\n        phone2: '690940321',\n        email: 'carlos.caballero@gmail.com',\n        password: '1234',\n        roles: ['student'],\n        documentType: { uid: 1, name: 'NIF' },\n        documentNumber: '26808956H',\n        license: 'B1',\n        aboutMe: 'LOREM IPSUM',\n        otherCompetences: 'LOREM IPSUM',\n        address: {\n          street: 'Urbanización las Areanas - 45',\n          province: { uid: 4, name: 'Cádiz' },\n          municipe: { uid: 6, name: 'Chiclana de la Frontera' }\n        },\n        avatar_hash: 'assets/img/perfil.png',\n        studies: [\n          {\n            uid: 1,\n            level: { uid: 1, name: 'Ciclo Formativo' },\n            category: { uid: 2, name: 'Informática y comunicaciones' },\n            institution: {\n              uid: 2,\n              name: 'IES Politécnico Jesús Marin'\n            },\n            title: {\n              uid: 2,\n              name: 'Administración de Sistemas Informáticos y Redes'\n            },\n            grade: {\n              uid: 3,\n              name: 'Ciclo Formativo de Grado Superior'\n            },\n            //Tue Apr 07 2020 00:00:00 GMT+0200 (hora de verano de Europa central)\n            //date: '30/06/2005',\n            date: new Date('Thu Jun 30 2005 00:00:00 GMT+0200 (hora de verano de Europa central)'),           \n            dual: false,\n            bilingue: true,\n            certificate: true\n          },\n          {\n            uid: 2,\n            institution: {\n              uid: 2,\n              name: 'IES Politécnico Jesús Marin'\n            },\n            category: { uid: 2, name: 'Informática y Comunicaciones' },\n            level: { uid: 1, name: 'Ciclo Formativo' },\n            title: {\n              uid: 1,\n              name: 'Desarrollo Aplicaciones Web'\n            },\n            grade: { uid: 3, name: 'Ciclo Formativo de Grado Superior' },\n            //date: '30/06/2007',\n            date: new Date('Sat Jun 30 2007 00:00:00 GMT+0200 (hora de verano de Europa central)'),  \n            dual: true,\n            bilingue: false,\n            certificate: false\n          }\n        ],\n      //  experiencies: [],  He anulado esta declaración en el backend y he usado la que viene debajo.\n        languages: [\n          {\n            uid: 1,\n            level: { uid: 5, name: 'C1' },\n            name: { uid: 1, name: 'Inglés' },\n            //date: '30/06/2005'\n            date: new Date('Thu Jun 30 2005 00:00:00 GMT+0200 (hora de verano de Europa central)'),  \n          },\n          {\n            uid: 2,\n            level: { uid: 4, name: 'B2' },\n            name: { uid: 2, name: 'Francés' },\n            //date: '30/06/1998'\n            date: new Date('Thu Jun 30 1998 00:00:00 GMT+0200 (hora de verano de Europa central)'),  \n          }\n        ],\n        offers: [],\n        experiencies: [\n          {\n            uid: 1,\n            empresa: 'Suma',\n            //date_incio: '20/02/2012',\n            date_incio: new Date('Mon Feb 20 2012 00:00:00 GMT+0200 (hora de verano de Europa central)'),  \n            //date_fin: '02/10/2016',\n            date_fin: new Date('Wen Nov 02 2016 00:00:00 GMT+0200 (hora de verano de Europa central)'),\n            puesto: 'Junior',\n            tareas: 'Desarrollador front-end'\n          },\n          {\n            uid: 2,\n            empresa: 'Indra',\n            //date_incio: '06/01/2017',\n            date_incio: new Date('Fri Jan 06 2017 00:00:00 GMT+0200 (hora de verano de Europa central)'), \n            //date_fin: '20/09/2019',\n            date_fin: new Date('Fri Sep 20 2019 00:00:00 GMT+0200 (hora de verano de Europa central)'),\n            puesto: 'Ingeniero',\n            tareas: 'Desarrollador back-end'\n          }\n        ],/*\n        languages: [\n          { id: 0, lid: 0, idioma: 'Inglés', nivel: 'B2', date: '30/06/2008' },\n          {\n            id: 0,\n            lid: 1,\n            idioma: 'Portugués',\n            nivel: 'A2',\n            date: '30/06/2013'\n          }\n        ]\n     */\n      }\n    ];\n\n    const offers: any[] = [\n      {\n        id: 1,\n        company: {\n          uid: 33,\n          name: 'Coritel'\n        },\n        job: {\n          name: 'Programador Jr Java',\n          description: 'Programación y prueba unitaria en Java'\n        },\n        province: { uid: 1, name: 'Málaga' },\n        municipe: { uid: 7, name: 'Estepona' },\n        //date: '21/09/2006',\n        date: new Date('Thu Sep 21 2006 00:00:00 GMT+0200 (hora de verano de Europa central)'),\n        category: { uid: 2, name: 'Informática y Comunicaciones' },\n        title: [\n          { uid: 1, name: 'Desarrollo Aplicaciones Web' },\n          { uid: 4, name: 'Desarrollo Aplicaciones Multiplataforma' }\n        ]\n      },\n      {\n        id: 2,\n        company: {\n          uid: 33,\n          name: 'Coritel'\n        },\n        job: {\n          name: 'Comercial',\n          description:\n            'Relaciones con los clientes y atención a las redes sociales.'\n        },\n        province: { uid: 1, name: 'Málaga' },\n        municipe: { uid: 8, name: 'Campanillas (PTA)' },\n        //date: '21/09/2016',\n        date: new Date('Wed Sep 21 2006 00:00:00 GMT+0200 (hora de verano de Europa central)'),\n        category: { uid: 4, name: 'Comercio y Marketing' },\n        title: [{ uid: 5, name: 'Gestión Comercial y Empresarial' }]\n      },\n      {\n        id: 3,\n        company: {\n          uid: 33,\n          name: 'Coritel'\n        },\n        job: {\n          name: 'Analista Programador Java',\n          description:\n            'Análisis funcional y diseño técnico/detallado de componentes'\n        },\n        province: { uid: 5, name: 'Granada' },\n        municipe: { uid: 9, name: 'Motril' },\n        //date: '11/07/2016',\n        date: new Date('Mon Jul 11 2016 00:00:00 GMT+0200 (hora de verano de Europa central)'),\n        category: { uid: 2, name: 'Informática y Comunicaciones' },\n        title: [{ uid: 4, name: 'Desarrollo Aplicaciones Multiplataforma' }]\n      },\n      {\n        id: 4,\n        company: {\n          uid: 35,\n          name: 'Indra'\n        },\n        job: {\n          name: 'Administrativo',\n          description: 'Gestión de cartera de clientes.'\n        },\n        province: { uid: 2, name: 'Sevilla' },\n        municipe: { uid: 10, name: 'Osuna' },\n        //date: '01/12/2015',\n        date: new Date('Thu Dec 01 2015 00:00:00 GMT+0200 (hora de verano de Europa central)'),\n        category: { uid: 5, name: 'Administración y Gestión' },\n        title: [{ uid: 6, name: 'Empresariales' }]\n      }\n    ];\n    return { users, offers };\n  }\n}\n","/* import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material'; */\nimport { Component, Inject } from \"@angular/core\";\n\n@Component({\n  selector: \"app-confirm\",\n  template: `\n    <!--  <h1 matDialogTitle>{{ data.title }}</h1>\n    <div mat-dialog-content>{{ data.message }}</div>\n    <div mat-dialog-actions>\n      <button\n        type=\"button\"\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"dialogRef.close(true)\"\n      >\n        OK\n      </button>\n      &nbsp;\n      <span fxFlex></span>\n      <button\n        type=\"button\"\n        color=\"accent\"\n        mat-raised-button\n        (click)=\"dialogRef.close(false)\"\n      >\n        Cancel\n      </button>\n    </div> -->\n  `\n})\nexport class AppComfirmComponent {\n  constructor() /*  public dialogRef: MatDialogRef<AppComfirmComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any */\n  {}\n}\n","import { Observable } from 'rxjs';\n/* import { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material'; */\nimport { Injectable } from '@angular/core';\n\nimport { AppComfirmComponent } from './app-confirm.component';\n\ninterface ConfirmData {\n  title?: string;\n  message?: string;\n}\n\n@Injectable()\nexport class AppConfirmService {\n  constructor(/* private dialog: MatDialog */) {}\n\n  public confirm(data: ConfirmData = {}) /*:  Observable<boolean> */ {\n    /*  data.title = data.title || 'Confirm';\n    data.message = data.message || 'Are you sure?';\n    let dialogRef: MatDialogRef<AppComfirmComponent>;\n    dialogRef = this.dialog.open(AppComfirmComponent, {\n      width: '380px',\n      disableClose: true,\n      data: { title: data.title, message: data.message }\n    });\n    return dialogRef.afterClosed(); */\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError, from } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AppSettings } from 'src/app/shared/app.settings';\nimport { catchError, exhaustMap, map, tap ,switchMap} from 'rxjs/operators';\nimport { Credentials, User} from '../models/user.model';\nimport { ofType } from '@ngrx/effects';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  existe:boolean;\n  users: User[]=[];\n  constructor(private http: HttpClient,private router:Router,) {}\n\n  getUsers():Observable<User> {\n    return this.http.get<any>(AppSettings.API_ENDPOINT_USERS);\n    \n  }\n\n   public login(): Observable<any>{\n     return this.getUsers();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError, from } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AppSettings } from 'src/app/shared/app.settings';\nimport { Store } from '@ngrx/store';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n\n  color:any;\n  constructor() {}\n\n  setColor(color:String){\n      console.log(\"Entra\");\n    this.color=color;\n  }\n  getColor(){\n      return this.color;\n  }\n  \n  }","import { Injectable } from '@angular/core';\nimport { AppSettings } from '../app.settings';\nimport { HttpClient } from '@angular/common/http';\nimport { of, Observable } from 'rxjs';\nimport { Offer } from '../models/offer.model';\n\n@Injectable()\nexport class OffersService {\n  private _offers: Offer[] = [{}] as Offer[];\n\n  constructor(\n    private http: HttpClient /* , private store$: Store<AppStore> */\n  ) {}\n\n  set offers(_offers) {\n    this._offers = _offers;\n  }\n  get offers() {\n    return this._offers;\n  }\n\n  getOffers() {\n    return this.http.get<any>(AppSettings.API_ENDPOINT_OFFERS);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppSettings } from '../app.settings';\nimport { HttpClient } from '@angular/common/http';\nimport { of, Observable } from 'rxjs';\nimport { User } from '../models/user.model';\n\n@Injectable()\nexport class ProfileService {\n  private _user: User = {} as User;\n\n  constructor(\n    private http: HttpClient /* , private store$: Store<AppStore> */\n  ) {}\n\n  set user(_user) {\n    this._user = _user;\n  }\n  get user() {\n    return this._user;\n  }\n  loadProfile(): Observable<any /* UserOptions */> {\n    return of(this.user as any);\n    //return this.http.get<UserOptions>(AppSettings.API_ENDPOINT_USER_ME);\n  }\n  logout(): void {\n    /*  this.store$.dispatch(new UserActions.Logout()); */\n  }\n  public updateProfile(profile: any /* User */): Observable<any /* User */> {\n    return this.http.put<any>(AppSettings.API_ENDPOINT_USERS, { ...profile });\n  }\n  public signupProfile(profile: any /* UserOptions */): Observable<boolean> {\n    return this.http.post<boolean>(\n      AppSettings.API_ENDPOINT_USER_CREATE,\n      profile\n    );\n  }\n  public requestRememberPassword(uid: { uid: string }): Observable<boolean> {\n    return this.http.post<boolean>(\n      AppSettings.API_ENDPOINT_USER_REQUEST_REMEMBER_PASSWORD,\n      uid\n    );\n  }\n  public rememberPassword(uidAndHash: {\n    uid: string;\n    hash: string;\n  }): Observable<boolean> {\n    return this.http.post<boolean>(\n      AppSettings.API_ENDPOINT_USER_REMEMBER_PASSWORD,\n      uidAndHash\n    );\n  }\n  public confirmUser(uidAndHash: {\n    uid: string;\n    hash: string;\n  }): Observable<boolean> {\n    return this.http.post<boolean>(\n      AppSettings.API_ENDPOINT_CONFIRM_USER,\n      uidAndHash\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError, from } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AppSettings } from 'src/app/shared/app.settings';\nimport { catchError, exhaustMap, map, tap ,switchMap} from 'rxjs/operators';\nimport { Credentials, User} from '../models/user.model';\nimport { ofType } from '@ngrx/effects';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  existe:boolean;\n  users: User[]=[];\n  constructor(private http: HttpClient,private store$: Store<User>) {}\n\n  getUsers():Observable<User> {\n    return this.http.get<any>(AppSettings.API_ENDPOINT_USERS);\n    \n  }\n\n  public login(): Observable<any>{\n     return this.getUsers();\n  }\n\n  public remember(): Observable<any>{\n    return this.getUsers();\n  }\n\n  public updateProfile(profile: any /* User */): Observable<any /* User */> {\n    console.log (\"Petición al servidor\");\n    return this.http.put<any>(AppSettings.API_ENDPOINT_USERS, { ...profile });\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n/*\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar'; */\n\n// COMPONENTS\nimport { AppComfirmComponent } from './services/app-confirm/app-confirm.component';\nimport { AdminLayoutComponent } from './components/admin-layout/admin-layout.component';\nimport { LineComponent } from './widgets/line/line.component';\nimport { MaterialModule } from '../material-module'\nimport { HighchartsChartModule } from 'highcharts-angular';\n// DIRECTIVES\n\n// PIPES\n\n// SERVICES\nimport { AppConfirmService } from './services/app-confirm/app-confirm.service';\n\nconst declarations = [AppComfirmComponent, AdminLayoutComponent,LineComponent];\n/*const exports = [\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  RouterModule,\n  AppComfirmComponent,\n  AdminLayoutComponent,\n  LineComponent,\n  MaterialModule\n];*/\nconst providers = [AppConfirmService];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule,MaterialModule, HighchartsChartModule],\n  entryComponents: [AppComfirmComponent],\n  providers,\n  declarations,\n  exports: [\n    CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  RouterModule,\n  AppComfirmComponent,\n  AdminLayoutComponent,\n  LineComponent,\n  MaterialModule\n  ]\n})\nexport class SharedModule {}\n","import { createAction, props } from '@ngrx/store';\r\nimport { Action } from '@ngrx/store';\r\nimport {User} from '../../../models/user.model';\r\nimport {Offer} from '../../../models/offer.model';\r\n\r\nexport enum OffersActionTypes {\r\n  OFFER = '[Offer] getOffers',\r\n  OFFER_SUCCESS = '[Offer] offer Success',\r\n  OFFER_FAILED = '[Offer] offer Failed',\r\n\r\n}\r\n\r\n//----------------OBTENER OFERTAS--------------------\r\nexport class GetOffer implements Action{\r\n  readonly type = OffersActionTypes.OFFER;\r\n  constructor(){}\r\n}\r\n\r\nexport class OfferSuccess implements Action {\r\n  readonly type = OffersActionTypes.OFFER_SUCCESS;\r\n\r\n  constructor(public offer: Offer) {}\r\n}\r\nexport class OfferFailed implements Action {\r\n  readonly type = OffersActionTypes.OFFER_FAILED;\r\n\r\n  constructor(public message: string) {}\r\n}\r\n\r\nexport type OffersActions =\r\n|GetOffer\r\n|OfferSuccess \r\n|OfferFailed\r\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\nimport { of, Observable} from 'rxjs';\nimport { catchError, exhaustMap, map, tap ,switchMap} from 'rxjs/operators';\nimport * as OffersActions from '../actions/offers.actions';\nimport {Offer} from '../../../models/offer.model';\nimport { OffersService } from '../../../services/offers.service';\n\n@Injectable()\nexport class OfferEffects {\n  \n  constructor(\n    private actions$: Actions,\n    private offerService: OffersService ,\n    private snackBar: MatSnackBar,\n    private router:Router,\n   \n  ) {}\n\n  OFFERS_ACTIONS_SUCCESS = [\n    OffersActions.OffersActionTypes.OFFER_SUCCESS\n  ];\n\n  OFFERS_ACTIONS_FAILED = [\n    OffersActions.OffersActionTypes.OFFER_FAILED\n  ];\n\n    @Effect()\n    getOffers$ :Observable<any>= this.actions$.pipe(\n      ofType(OffersActions.OffersActionTypes.OFFER),\n      switchMap((action: any) =>\n        this.offerService.getOffers().pipe(\n            map((offers:Offer)=>{\n              console.log(\"Obtiene Ofertas\");\n              return new OffersActions.OfferSuccess(offers);\n            }),\n            catchError(error=>of(new OffersActions.OfferFailed(error))),\n          )\n        )     \n    );\n  \n\n\n  @Effect({ dispatch: false })\n  successNotification$ = this.actions$.pipe(\n    ofType(...this.OFFERS_ACTIONS_SUCCESS),\n    tap(() =>\n      this.snackBar.open('SUCCESS', 'Operation success', {\n        duration: 2000\n      })\n    )\n  );\n  @Effect({ dispatch: false })\n  failedNotification$ = this.actions$.pipe(\n    ofType(...this.OFFERS_ACTIONS_FAILED),\n    tap(() =>\n      this.snackBar.open('FAILED', 'Operation failed', {\n        duration: 2000\n      })\n    )\n  );\n}\n","import { OffersActionTypes, OffersActions } from '../actions/offers.actions';\nimport { Offer } from '../../../models/offer.model';\n\nexport interface AuthState {\n    getOffers:boolean,\n    offers:Offer,\n}\n\nexport const initialAuthState: AuthState = {\n  getOffers:false,\n  offers: undefined,\n};\n\nexport function offerReducer(\n  \n  state = initialAuthState,\n  action: OffersActions): AuthState {\n  switch (action.type) {\n    case OffersActionTypes.OFFER_SUCCESS:\n      return {\n        getOffers:true,\n        offers: action.offer,\n      };\n\n    default:\n      return state;\n  }\n}\n","// root-reducer\nimport {\n    ActionReducerMap,\n    MetaReducer\n} from '@ngrx/store';\n\nimport { environment } from '../../../environments/environment';\nimport { routerReducer } from '@ngrx/router-store';\nimport { userReducer } from './user/reducers/user.reducer';\nimport { offerReducer} from './offers/reducers/offers.reducer'\n\nexport interface State {}\nexport const metaReducers: MetaReducer<State>[]=!environment.production? []: [];\n\nexport const reducers = { \n    user: userReducer,\n    offer: offerReducer,\n    router:routerReducer,\n    \n};\n\n","import { Credentials} from '../../../models/user.model';\r\nimport { Action } from '@ngrx/store';\r\nimport {User} from '../../../models/user.model';\r\n\r\nexport enum UserActionTypes {\r\n  LOGIN = '[Login Page] Login',\r\n  LOGIN_SUCCESS = '[Login Page] Login success',\r\n  LOGIN_FAILED = '[Login Page], Login failed',\r\n  REMEMBER = '[Remember Pass] Remember',\r\n  REMEMBER_SUCCESS = '[Remember Pass] Remember Successfull',\r\n  REMEMBER_FAILED = '[Remember Pass] Remember Failed',\r\n  UPDATE= '[Update Profile] Update',\r\n  UPDATE_SUCCESS = '[Update Profile] Update Successfull',\r\n  UPDATE_FAILED = '[Update Profile] Update Failed',\r\n}\r\n//----------------LOGIN--------------------\r\nexport class Login implements Action{\r\n  readonly type = UserActionTypes.LOGIN;\r\n  constructor(public payload:Credentials){}\r\n}\r\n\r\nexport class LoginSuccess implements Action {\r\n  readonly type = UserActionTypes.LOGIN_SUCCESS;\r\n\r\n  constructor(public user: User) {}\r\n}\r\nexport class LoginFailed implements Action {\r\n  readonly type = UserActionTypes.LOGIN_FAILED;\r\n\r\n  constructor(public message: string) {}\r\n}\r\n//----------------REMEMBER PASSWORD--------------------\r\nexport class Remember implements Action{\r\n  readonly type = UserActionTypes.REMEMBER;\r\n  constructor(public payload:String){}\r\n}\r\n\r\nexport class RememberSuccess implements Action {\r\n  readonly type = UserActionTypes.REMEMBER_SUCCESS;\r\n\r\n  constructor(public user: User) {}\r\n}\r\nexport class RememberFailed implements Action {\r\n  readonly type = UserActionTypes.REMEMBER_FAILED;\r\n\r\n  constructor(public message: string) {}\r\n}\r\n//----------------MODIFICAR PERFIL--------------------\r\nexport class Update implements Action{\r\n  readonly type = UserActionTypes.UPDATE;\r\n  constructor(public user:User){}\r\n}\r\n\r\nexport class UpdateSuccess implements Action {\r\n  readonly type = UserActionTypes.UPDATE_SUCCESS;\r\n\r\n  constructor(public user: User) {}\r\n}\r\nexport class UpdateFailed implements Action {\r\n  readonly type = UserActionTypes.UPDATE_FAILED;\r\n\r\n  constructor(public message: string) {}\r\n}\r\n\r\n\r\nexport type UserActions =\r\n|Login\r\n|LoginSuccess\r\n|LoginFailed\r\n|Remember\r\n|RememberSuccess\r\n|RememberFailed\r\n|Update\r\n|UpdateSuccess\r\n|UpdateFailed;","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { Actions, ofType, Effect, act } from '@ngrx/effects';\nimport { of, Observable} from 'rxjs';\nimport { catchError, exhaustMap, map, tap ,switchMap} from 'rxjs/operators';\nimport * as UserActions from '../actions/user.actions';\nimport { User} from '../../../models/user.model';\nimport {Offer} from '../../../models/offer.model';\nimport { AuthService } from '../../../services/auth.service';\nimport { UserService } from '../../../services/user.service';\nimport { OffersService } from '../../../services/offers.service';\n\n@Injectable()\nexport class UserEffects {\n  \n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private userService: UserService,\n    private offerService: OffersService ,\n    private snackBar: MatSnackBar,\n    private router:Router,\n   \n  ) {}\n\n  AUTH_ACTIONS_SUCCESS = [\n    UserActions.UserActionTypes.LOGIN_SUCCESS,\n    UserActions.UserActionTypes.UPDATE_SUCCESS\n  ];\n\n  AUTH_ACTIONS_FAILED = [\n    UserActions.UserActionTypes.LOGIN_FAILED,\n    UserActions.UserActionTypes.UPDATE_FAILED\n  ];\n\n  @Effect()\n  login$ :Observable<any>= this.actions$.pipe(\n    ofType(UserActions.UserActionTypes.LOGIN),\n    switchMap((action: any) =>\n      this.authService.login().pipe(\n          map((users:User)=>{\n            console.log(\"Recepción servidor\");\n             if (users[0].email==action.payload.email && users[0].password ==action.payload.password){\n            console.log(\"LoginCorrecto\");\n            this.router.navigate(['/admin/dashboard']);\n            return new UserActions.LoginSuccess(users[0]);\n             }else{\n            console.log(\"NO LoginCorrecto\");\n            \n            return new UserActions.LoginFailed(\"Se produjo un error en la autentificación\");\n            \n             }\n          }),\n          catchError(error=>of(new UserActions.LoginFailed(error))),\n       \n        )\n      )\n    );\n\n    @Effect()\n    remember$ :Observable<any>= this.actions$.pipe(\n      ofType(UserActions.UserActionTypes.REMEMBER),\n      switchMap((action: any) =>\n        this.userService.remember().pipe(\n            map((users:User)=>{\n              console.log(action.payload.email)\n               if (users[0].email==action.payload.email){\n              console.log(\"Envío de credenciales\");\n                return new UserActions.RememberSuccess(users[0]);\n               }else{\n              console.log(\"No existe ese email en la web\");\n              return new UserActions.RememberFailed(\"Se produjo un error en el reenvío de credenciales\");\n              }\n            }),\n            catchError(error=>of(new UserActions.RememberFailed(error))),\n         \n          )\n        )\n      );\n\n  @Effect()\n  updateProfile$ :Observable<any>= this.actions$.pipe(\n    ofType(UserActions.UserActionTypes.UPDATE),\n    switchMap(({user}) =>\n      this.userService.updateProfile(user).pipe(\n          map(()=>{\n            console.log(\"Actialización\");\n            this.router.navigate(['/admin/profile']);\n            \n            return new UserActions.UpdateSuccess(user);\n          }),\n          catchError(error=>of(new UserActions.UpdateFailed(error))),\n        )\n      )\n    );\n\n  @Effect({ dispatch: false })\n  successNotification$ = this.actions$.pipe(\n    ofType(...this.AUTH_ACTIONS_SUCCESS),\n    tap(() =>\n      this.snackBar.open('SUCCESS', 'Operation success', {\n        duration: 2000\n      })\n    )\n  );\n  @Effect({ dispatch: false })\n  failedNotification$ = this.actions$.pipe(\n    ofType(...this.AUTH_ACTIONS_FAILED),\n    tap(() =>\n      this.snackBar.open('FAILED', 'Operation failed', {\n        duration: 2000\n      })\n    )\n  );\n}\n","import { UserActionTypes, UserActions } from '../actions/user.actions';\nimport { User } from '../../../models/user.model';\nimport { Offer } from '../../../models/offer.model';\n//import { UserState } from '../user/user.state';\n\nexport interface AuthState {\n    loggedIn:boolean,\n    rememberCredencial:boolean,\n    errorUser:boolean,\n    update:boolean,\n    message:string,\n    user:User,\n}\n\nexport const initialAuthState: AuthState = {\n  rememberCredencial:false,\n  errorUser:false,\n  loggedIn:false,\n  update:false,\n  message:null,\n  user: undefined,\n};\n\nexport function userReducer(\n  \n  state = initialAuthState,\n  action: UserActions): AuthState {\n  switch (action.type) {\n    case UserActionTypes.LOGIN_SUCCESS:\n      return {\n        rememberCredencial:false,\n        errorUser:false,\n        loggedIn:true,\n        update:false,\n        message:\"User Correcto\",\n        user: action.user,\n       \n      };\n    case UserActionTypes.LOGIN_FAILED:\n        return {\n          rememberCredencial:false,\n          errorUser:true,\n          loggedIn:false,\n          update:false,\n          message: action.message,\n          user: undefined,\n      };\n\n      case UserActionTypes.REMEMBER_SUCCESS:\n      return {\n        rememberCredencial:true,\n        errorUser:false,\n        loggedIn:false,\n        update:false,\n        message:\"User Correcto\",\n        user: action.user,\n       \n      };\n      case UserActionTypes.REMEMBER_FAILED:\n        return {\n          rememberCredencial:false,\n          errorUser:true,\n          loggedIn:false,\n          update:false,\n          message: action.message,\n          user: undefined,\n        };\n\n     case UserActionTypes.UPDATE_SUCCESS:\n      return {\n        rememberCredencial:false,\n        errorUser:false,\n        loggedIn:true,        \n        update:true,\n        message:\"User Correcto\",\n        user: action.user,\n       \n      };\n\n    default:\n      return state;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport * as Highcharts from 'highcharts';\n\n@Component({\n  selector: 'app-widget-line',\n  templateUrl: './line.component.html',\n  styleUrls: ['./line.component.scss']\n})\nexport class LineComponent implements OnInit {\n\n  chartOptions:{};\n\n  Highcharts = Highcharts;\n  constructor() { }\n\n  ngOnInit() {\n    this.chartOptions = {\n        chart: {\n            type: 'line'\n        },\n        title: {\n            text: 'Monthly Offers'\n        },\n        subtitle: {\n            text: 'Year 2019'\n        },\n        xAxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n            //categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        yAxis: {\n            title: {\n                text: 'nº Offers'\n            }\n        },\n        plotOptions: {\n            line: {\n                dataLabels: {\n                    enabled: true\n                },\n                enableMouseTracking: false\n            }\n        },\n        series: [{\n            name: 'Total',\n            data: [6.0, 12.0, 10.0, 22, 23, 16, 15,  9, 20, 14, 17, 23]\n            //data: [7.0, 6.9, 9.5, 14.5, 18.4, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]\n        }, {\n            name: 'Informática',\n            data: [4.0, 5.0,  6.0,  10,  5,  7,  8,  1, 10,  8, 10, 12]\n            //data: [7.0, 6.9, 9.5, 14.5, 18.4, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]\n        }, {\n            name: 'Marketing',\n            data: [0.0, 5.0,  3.0,   7,  9,  5,  4,  7, 7,   3,  2,  8]\n            //data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]\n        }, {\n            name: 'Administración',\n            data: [2.0, 2.0,  1.0,   5,  9,  4,  3,  1, 3,   3,  5,  3]\n            //data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]\n       }]\n    };\n    \n  }\n\n}\n","<section style=\"clear:both;padding-bottom:1em;\"></section>\n\n<highcharts-chart \n  [Highcharts]=\"Highcharts\"\n  [options]=\"chartOptions\" \n  style=\"width: 100%; height: 400px; display: block;\"\n></highcharts-chart>\n<section style=\"clear:both;padding-bottom:1em;\"></section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"],"sourceRoot":"webpack:///"}